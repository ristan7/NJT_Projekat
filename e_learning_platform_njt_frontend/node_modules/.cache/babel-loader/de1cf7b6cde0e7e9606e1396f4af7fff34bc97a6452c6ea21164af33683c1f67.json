{"ast":null,"code":"// src/api/api.js\nimport http from \"./http\";\n\n// --- USER ---\nexport async function getMe({\n  userId\n} = {}) {\n  // tvoj /api/users/me podržava ?id= (fallback kad nema auth)\n  const url = userId ? `/users/me?id=${userId}` : \"/users/me\";\n  const res = await http.get(url);\n  return res.data;\n}\n\n// --- NOTIFICATIONS ---\n// lista (po korisniku), opcioni filter: unread i limit\nexport async function getNotifications({\n  userId,\n  unread = false,\n  limit = 50\n} = {}) {\n  const params = new URLSearchParams();\n  if (userId) params.set(\"userId\", String(userId));\n  if (unread) params.set(\"unread\", \"true\");\n  if (limit) params.set(\"limit\", String(limit));\n  const res = await http.get(`/notifications?${params.toString()}`);\n  return res.data;\n}\n\n// badge (ako zatreba u Navbaru)\nexport async function getUnreadCount(userId) {\n  if (!userId) return 0;\n  const res = await http.get(`/notifications/unread/count`, {\n    params: {\n      userId\n    }\n  });\n  return Number(res.data || 0);\n}\n\n// označi jednu kao pročitanu\nexport async function markNotificationRead(id) {\n  await http.post(`/notifications/${id}/read`);\n}\n\n// označi sve kao pročitane\nexport async function markAllNotificationsRead(userId) {\n  const res = await http.post(`/notifications/read-all`, null, {\n    params: {\n      userId\n    }\n  });\n  return res.data; // broj ažuriranih\n}","map":{"version":3,"names":["http","getMe","userId","url","res","get","data","getNotifications","unread","limit","params","URLSearchParams","set","String","toString","getUnreadCount","Number","markNotificationRead","id","post","markAllNotificationsRead"],"sources":["C:/Users/mikir/Documents/NetBeansProjects/NJT_Projekat/e_learning_platform_njt_frontend/src/api/api.js"],"sourcesContent":["// src/api/api.js\r\nimport http from \"./http\";\r\n\r\n// --- USER ---\r\nexport async function getMe({ userId } = {}) {\r\n  // tvoj /api/users/me podržava ?id= (fallback kad nema auth)\r\n  const url = userId ? `/users/me?id=${userId}` : \"/users/me\";\r\n  const res = await http.get(url);\r\n  return res.data;\r\n}\r\n\r\n// --- NOTIFICATIONS ---\r\n// lista (po korisniku), opcioni filter: unread i limit\r\nexport async function getNotifications({ userId, unread = false, limit = 50 } = {}) {\r\n  const params = new URLSearchParams();\r\n  if (userId) params.set(\"userId\", String(userId));\r\n  if (unread) params.set(\"unread\", \"true\");\r\n  if (limit) params.set(\"limit\", String(limit));\r\n  const res = await http.get(`/notifications?${params.toString()}`);\r\n  return res.data;\r\n}\r\n\r\n// badge (ako zatreba u Navbaru)\r\nexport async function getUnreadCount(userId) {\r\n  if (!userId) return 0;\r\n  const res = await http.get(`/notifications/unread/count`, { params: { userId } });\r\n  return Number(res.data || 0);\r\n}\r\n\r\n// označi jednu kao pročitanu\r\nexport async function markNotificationRead(id) {\r\n  await http.post(`/notifications/${id}/read`);\r\n}\r\n\r\n// označi sve kao pročitane\r\nexport async function markAllNotificationsRead(userId) {\r\n  const res = await http.post(`/notifications/read-all`, null, { params: { userId } });\r\n  return res.data; // broj ažuriranih\r\n}\r\n"],"mappings":"AAAA;AACA,OAAOA,IAAI,MAAM,QAAQ;;AAEzB;AACA,OAAO,eAAeC,KAAKA,CAAC;EAAEC;AAAO,CAAC,GAAG,CAAC,CAAC,EAAE;EAC3C;EACA,MAAMC,GAAG,GAAGD,MAAM,GAAG,gBAAgBA,MAAM,EAAE,GAAG,WAAW;EAC3D,MAAME,GAAG,GAAG,MAAMJ,IAAI,CAACK,GAAG,CAACF,GAAG,CAAC;EAC/B,OAAOC,GAAG,CAACE,IAAI;AACjB;;AAEA;AACA;AACA,OAAO,eAAeC,gBAAgBA,CAAC;EAAEL,MAAM;EAAEM,MAAM,GAAG,KAAK;EAAEC,KAAK,GAAG;AAAG,CAAC,GAAG,CAAC,CAAC,EAAE;EAClF,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;EACpC,IAAIT,MAAM,EAAEQ,MAAM,CAACE,GAAG,CAAC,QAAQ,EAAEC,MAAM,CAACX,MAAM,CAAC,CAAC;EAChD,IAAIM,MAAM,EAAEE,MAAM,CAACE,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;EACxC,IAAIH,KAAK,EAAEC,MAAM,CAACE,GAAG,CAAC,OAAO,EAAEC,MAAM,CAACJ,KAAK,CAAC,CAAC;EAC7C,MAAML,GAAG,GAAG,MAAMJ,IAAI,CAACK,GAAG,CAAC,kBAAkBK,MAAM,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC;EACjE,OAAOV,GAAG,CAACE,IAAI;AACjB;;AAEA;AACA,OAAO,eAAeS,cAAcA,CAACb,MAAM,EAAE;EAC3C,IAAI,CAACA,MAAM,EAAE,OAAO,CAAC;EACrB,MAAME,GAAG,GAAG,MAAMJ,IAAI,CAACK,GAAG,CAAC,6BAA6B,EAAE;IAAEK,MAAM,EAAE;MAAER;IAAO;EAAE,CAAC,CAAC;EACjF,OAAOc,MAAM,CAACZ,GAAG,CAACE,IAAI,IAAI,CAAC,CAAC;AAC9B;;AAEA;AACA,OAAO,eAAeW,oBAAoBA,CAACC,EAAE,EAAE;EAC7C,MAAMlB,IAAI,CAACmB,IAAI,CAAC,kBAAkBD,EAAE,OAAO,CAAC;AAC9C;;AAEA;AACA,OAAO,eAAeE,wBAAwBA,CAAClB,MAAM,EAAE;EACrD,MAAME,GAAG,GAAG,MAAMJ,IAAI,CAACmB,IAAI,CAAC,yBAAyB,EAAE,IAAI,EAAE;IAAET,MAAM,EAAE;MAAER;IAAO;EAAE,CAAC,CAAC;EACpF,OAAOE,GAAG,CAACE,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}