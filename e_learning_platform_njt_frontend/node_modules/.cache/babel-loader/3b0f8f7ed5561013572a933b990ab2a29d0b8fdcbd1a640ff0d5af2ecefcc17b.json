{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikir\\\\Documents\\\\NetBeansProjects\\\\NJT_Projekat\\\\e_learning_platform_njt_frontend\\\\src\\\\pages\\\\Notifications.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { getMe, getNotifications, markNotificationRead, markAllNotificationsRead, getNotificationTypes } from \"../api/api\";\nimport \"../css/Notifications.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Notifications() {\n  _s();\n  const [me, setMe] = useState(null);\n  const [items, setItems] = useState([]);\n  const [types, setTypes] = useState([]); // [{id, notificationTypeName}]\n  const [loading, setLoading] = useState(true);\n  const [onlyUnread, setOnlyUnread] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [sortKey, setSortKey] = useState(\"date_desc\"); // \"date_asc\" | \"title_asc\" | \"title_desc\" | \"type_asc\" | \"type_desc\"\n  const [typeFilter, setTypeFilter] = useState(\"all\"); // \"all\" | <id>\n\n  // 1) Učitaj korisnika, tipove i notifikacije\n  useEffect(() => {\n    let uid;\n    setLoading(true);\n    getMe({\n      userId: 1\n    }) // dok nema auth\n    .then(u => {\n      setMe(u);\n      uid = u.userId;\n      return Promise.all([getNotificationTypes(), getNotifications({\n        userId: uid,\n        unread: false,\n        limit: 50\n      })]);\n    }).then(([tps, list]) => {\n      setTypes(tps || []);\n      setItems(list || []);\n    }).finally(() => setLoading(false)).catch(() => setLoading(false));\n  }, []);\n\n  // Napravi mapu id -> naziv tipa\n  const typesMap = useMemo(() => {\n    const m = new Map();\n    (types || []).forEach(t => {\n      if (t && t.id != null) m.set(Number(t.id), t.notificationTypeName);\n    });\n    return m;\n  }, [types]);\n\n  // Helper: izvuci tipId iz stavke, nezavisno kako bek pošalje\n  const getTypeId = n => {\n    var _ref, _ref2, _ref3, _n$notificationTypeId, _n$type, _n$notificationType;\n    return (_ref = (_ref2 = (_ref3 = (_n$notificationTypeId = n === null || n === void 0 ? void 0 : n.notificationTypeId) !== null && _n$notificationTypeId !== void 0 ? _n$notificationTypeId : n === null || n === void 0 ? void 0 : n.typeId) !== null && _ref3 !== void 0 ? _ref3 : n === null || n === void 0 ? void 0 : (_n$type = n.type) === null || _n$type === void 0 ? void 0 : _n$type.id) !== null && _ref2 !== void 0 ? _ref2 : n === null || n === void 0 ? void 0 : (_n$notificationType = n.notificationType) === null || _n$notificationType === void 0 ? void 0 : _n$notificationType.id) !== null && _ref !== void 0 ? _ref : null;\n  };\n\n  // Filter + pretraga + sort\n  const visible = useMemo(() => {\n    let arr = Array.isArray(items) ? [...items] : [];\n    if (onlyUnread) arr = arr.filter(n => !n.read);\n    if (typeFilter !== \"all\") {\n      const idNum = Number(typeFilter);\n      arr = arr.filter(n => Number(getTypeId(n)) === idNum);\n    }\n    if (query.trim()) {\n      const q = query.trim().toLowerCase();\n      arr = arr.filter(n => {\n        var _typesMap$get;\n        const title = (n.notificationTitle || n.title || \"\").toLowerCase();\n        const msg = (n.message || n.notificationMessage || n.body || \"\").toLowerCase();\n        const tName = ((_typesMap$get = typesMap.get(Number(getTypeId(n)))) === null || _typesMap$get === void 0 ? void 0 : _typesMap$get.toLowerCase()) || \"\";\n        return title.includes(q) || msg.includes(q) || tName.includes(q);\n      });\n    }\n    arr.sort((a, b) => {\n      switch (sortKey) {\n        case \"title_asc\":\n        case \"title_desc\":\n          {\n            const A = (a.notificationTitle || a.title || \"\").toLowerCase();\n            const B = (b.notificationTitle || b.title || \"\").toLowerCase();\n            const cmp = A.localeCompare(B);\n            return sortKey === \"title_asc\" ? cmp : -cmp;\n          }\n        case \"type_asc\":\n        case \"type_desc\":\n          {\n            const A = (typesMap.get(Number(getTypeId(a))) || \"\").toLowerCase();\n            const B = (typesMap.get(Number(getTypeId(b))) || \"\").toLowerCase();\n            const cmp = A.localeCompare(B);\n            return sortKey === \"type_asc\" ? cmp : -cmp;\n          }\n        case \"date_asc\":\n        case \"date_desc\":\n        default:\n          {\n            const A = new Date(a.sentAt || a.createdAt || a.date || 0).getTime();\n            const B = new Date(b.sentAt || b.createdAt || b.date || 0).getTime();\n            return sortKey === \"date_asc\" ? A - B : B - A;\n          }\n      }\n    });\n    return arr;\n  }, [items, onlyUnread, query, sortKey, typeFilter, typesMap]);\n  async function handleMarkRead(id) {\n    const prev = items;\n    setItems(list => list.map(n => n.notificationId === id || n.id === id ? {\n      ...n,\n      read: true\n    } : n));\n    try {\n      await markNotificationRead(id);\n    } catch {\n      setItems(prev); // revert on error\n    }\n  }\n  async function handleMarkAll() {\n    if (!(me !== null && me !== void 0 && me.userId)) return;\n    const prev = items;\n    setItems(list => list.map(n => ({\n      ...n,\n      read: true\n    })));\n    try {\n      await markAllNotificationsRead(me.userId);\n    } catch {\n      setItems(prev);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"n-head\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"n-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"who\",\n          children: [me === null || me === void 0 ? void 0 : me.firstName, \" \", me === null || me === void 0 ? void 0 : me.lastName, \" \\u2022 \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"muted\",\n            children: me === null || me === void 0 ? void 0 : me.userEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"n-filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"n-search\",\n            placeholder: \"Pretraga po naslovu, poruci ili tipu\\u2026\",\n            value: query,\n            onChange: e => setQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"n-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: onlyUnread,\n              onChange: e => setOnlyUnread(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Sam\\u043E nepro\\u010Ditane\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"n-select\",\n            value: typeFilter,\n            onChange: e => setTypeFilter(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"Svi tipovi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), (types || []).map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: t.id,\n              children: t.notificationTypeName\n            }, t.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"n-select\",\n            value: sortKey,\n            onChange: e => setSortKey(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"date_desc\",\n              children: \"Datum (novije prvo)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"date_asc\",\n              children: \"Datum (starije prvo)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"title_asc\",\n              children: \"Naslov A-Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"title_desc\",\n              children: \"Naslov Z-A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"type_asc\",\n              children: \"Tip A-Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"type_desc\",\n              children: \"Tip Z-A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"n-right\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn primary\",\n          onClick: handleMarkAll,\n          children: \"Ozna\\u010Di sve kao pro\\u010Ditano\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card n-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"n-table head\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Naslov\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Tip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Poruka\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Poslato\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"n-skeleton\",\n        children: \"U\\u010Ditavanje\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this) : visible.map((n, idx) => {\n        var _n$notificationId;\n        const id = (_n$notificationId = n.notificationId) !== null && _n$notificationId !== void 0 ? _n$notificationId : n.id;\n        const title = n.notificationTitle || n.title || \"—\";\n        const msg = n.message || n.notificationMessage || n.body || \"—\";\n        const sent = n.sentAt || n.createdAt || n.date;\n        const tId = Number(getTypeId(n));\n        const tName = typesMap.get(tId) || \"—\";\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `n-table row ${n.read ? \"is-read\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: idx + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"n-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"type-pill\",\n              children: tName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"n-msg\",\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"n-date\",\n            children: sent ? new Date(sent).toLocaleString() : \"—\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"n-actions\",\n            children: n.read ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge read\",\n              children: \"Pro\\u010Ditano\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn ghost sm\",\n              onClick: () => handleMarkRead(id),\n              children: \"Ozna\\u010Di pro\\u010Ditano\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this);\n      }), !loading && visible.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"n-empty muted\",\n        children: \"Nema rezultata za dati filter/pretragu.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(Notifications, \"02jesVVx5QeLLCrP0FXKO4vpwno=\");\n_c = Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","getMe","getNotifications","markNotificationRead","markAllNotificationsRead","getNotificationTypes","jsxDEV","_jsxDEV","Notifications","_s","me","setMe","items","setItems","types","setTypes","loading","setLoading","onlyUnread","setOnlyUnread","query","setQuery","sortKey","setSortKey","typeFilter","setTypeFilter","uid","userId","then","u","Promise","all","unread","limit","tps","list","finally","catch","typesMap","m","Map","forEach","t","id","set","Number","notificationTypeName","getTypeId","n","_ref","_ref2","_ref3","_n$notificationTypeId","_n$type","_n$notificationType","notificationTypeId","typeId","type","notificationType","visible","arr","Array","isArray","filter","read","idNum","trim","q","toLowerCase","_typesMap$get","title","notificationTitle","msg","message","notificationMessage","body","tName","get","includes","sort","a","b","A","B","cmp","localeCompare","Date","sentAt","createdAt","date","getTime","handleMarkRead","prev","map","notificationId","handleMarkAll","className","children","firstName","lastName","userEmail","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","checked","onClick","idx","_n$notificationId","sent","tId","toLocaleString","length","_c","$RefreshReg$"],"sources":["C:/Users/mikir/Documents/NetBeansProjects/NJT_Projekat/e_learning_platform_njt_frontend/src/pages/Notifications.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n  getMe,\r\n  getNotifications,\r\n  markNotificationRead,\r\n  markAllNotificationsRead,\r\n  getNotificationTypes,\r\n} from \"../api/api\";\r\nimport \"../css/Notifications.css\";\r\n\r\nexport default function Notifications() {\r\n  const [me, setMe] = useState(null);\r\n  const [items, setItems] = useState([]);\r\n  const [types, setTypes] = useState([]); // [{id, notificationTypeName}]\r\n  const [loading, setLoading] = useState(true);\r\n  const [onlyUnread, setOnlyUnread] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [sortKey, setSortKey] = useState(\"date_desc\"); // \"date_asc\" | \"title_asc\" | \"title_desc\" | \"type_asc\" | \"type_desc\"\r\n  const [typeFilter, setTypeFilter] = useState(\"all\");  // \"all\" | <id>\r\n\r\n  // 1) Učitaj korisnika, tipove i notifikacije\r\n  useEffect(() => {\r\n    let uid;\r\n\r\n    setLoading(true);\r\n    getMe({ userId: 1 }) // dok nema auth\r\n      .then(u => {\r\n        setMe(u);\r\n        uid = u.userId;\r\n        return Promise.all([\r\n          getNotificationTypes(),\r\n          getNotifications({ userId: uid, unread: false, limit: 50 }),\r\n        ]);\r\n      })\r\n      .then(([tps, list]) => {\r\n        setTypes(tps || []);\r\n        setItems(list || []);\r\n      })\r\n      .finally(() => setLoading(false))\r\n      .catch(() => setLoading(false));\r\n  }, []);\r\n\r\n  // Napravi mapu id -> naziv tipa\r\n  const typesMap = useMemo(() => {\r\n    const m = new Map();\r\n    (types || []).forEach(t => {\r\n      if (t && t.id != null) m.set(Number(t.id), t.notificationTypeName);\r\n    });\r\n    return m;\r\n  }, [types]);\r\n\r\n  // Helper: izvuci tipId iz stavke, nezavisno kako bek pošalje\r\n  const getTypeId = (n) =>\r\n    n?.notificationTypeId ??\r\n    n?.typeId ??\r\n    n?.type?.id ??\r\n    n?.notificationType?.id ??\r\n    null;\r\n\r\n  // Filter + pretraga + sort\r\n  const visible = useMemo(() => {\r\n    let arr = Array.isArray(items) ? [...items] : [];\r\n\r\n    if (onlyUnread) arr = arr.filter(n => !n.read);\r\n\r\n    if (typeFilter !== \"all\") {\r\n      const idNum = Number(typeFilter);\r\n      arr = arr.filter(n => Number(getTypeId(n)) === idNum);\r\n    }\r\n\r\n    if (query.trim()) {\r\n      const q = query.trim().toLowerCase();\r\n      arr = arr.filter(n => {\r\n        const title = (n.notificationTitle || n.title || \"\").toLowerCase();\r\n        const msg = (n.message || n.notificationMessage || n.body || \"\").toLowerCase();\r\n        const tName = typesMap.get(Number(getTypeId(n)))?.toLowerCase() || \"\";\r\n        return title.includes(q) || msg.includes(q) || tName.includes(q);\r\n      });\r\n    }\r\n\r\n    arr.sort((a, b) => {\r\n      switch (sortKey) {\r\n        case \"title_asc\":\r\n        case \"title_desc\": {\r\n          const A = (a.notificationTitle || a.title || \"\").toLowerCase();\r\n          const B = (b.notificationTitle || b.title || \"\").toLowerCase();\r\n          const cmp = A.localeCompare(B);\r\n          return sortKey === \"title_asc\" ? cmp : -cmp;\r\n        }\r\n        case \"type_asc\":\r\n        case \"type_desc\": {\r\n          const A = (typesMap.get(Number(getTypeId(a))) || \"\").toLowerCase();\r\n          const B = (typesMap.get(Number(getTypeId(b))) || \"\").toLowerCase();\r\n          const cmp = A.localeCompare(B);\r\n          return sortKey === \"type_asc\" ? cmp : -cmp;\r\n        }\r\n        case \"date_asc\":\r\n        case \"date_desc\":\r\n        default: {\r\n          const A = new Date(a.sentAt || a.createdAt || a.date || 0).getTime();\r\n          const B = new Date(b.sentAt || b.createdAt || b.date || 0).getTime();\r\n          return sortKey === \"date_asc\" ? A - B : B - A;\r\n        }\r\n      }\r\n    });\r\n\r\n    return arr;\r\n  }, [items, onlyUnread, query, sortKey, typeFilter, typesMap]);\r\n\r\n  async function handleMarkRead(id) {\r\n    const prev = items;\r\n    setItems(list => list.map(n => (n.notificationId === id || n.id === id ? { ...n, read: true } : n)));\r\n    try {\r\n      await markNotificationRead(id);\r\n    } catch {\r\n      setItems(prev); // revert on error\r\n    }\r\n  }\r\n\r\n  async function handleMarkAll() {\r\n    if (!me?.userId) return;\r\n    const prev = items;\r\n    setItems(list => list.map(n => ({ ...n, read: true })));\r\n    try {\r\n      await markAllNotificationsRead(me.userId);\r\n    } catch {\r\n      setItems(prev);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"page-wrap\">\r\n      <header className=\"n-head\">\r\n        <div className=\"n-left\">\r\n          <div className=\"who\">\r\n            {me?.firstName} {me?.lastName} • <span className=\"muted\">{me?.userEmail}</span>\r\n          </div>\r\n\r\n          <div className=\"n-filters\">\r\n            <input\r\n              className=\"n-search\"\r\n              placeholder=\"Pretraga po naslovu, poruci ili tipu…\"\r\n              value={query}\r\n              onChange={e => setQuery(e.target.value)}\r\n            />\r\n\r\n            <label className=\"n-check\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={onlyUnread}\r\n                onChange={e => setOnlyUnread(e.target.checked)}\r\n              />\r\n              <span>Samо nepročitane</span>\r\n            </label>\r\n\r\n            <select\r\n              className=\"n-select\"\r\n              value={typeFilter}\r\n              onChange={e => setTypeFilter(e.target.value)}\r\n            >\r\n              <option value=\"all\">Svi tipovi</option>\r\n              {(types || []).map(t => (\r\n                <option key={t.id} value={t.id}>{t.notificationTypeName}</option>\r\n              ))}\r\n            </select>\r\n\r\n            <select\r\n              className=\"n-select\"\r\n              value={sortKey}\r\n              onChange={e => setSortKey(e.target.value)}\r\n            >\r\n              <option value=\"date_desc\">Datum (novije prvo)</option>\r\n              <option value=\"date_asc\">Datum (starije prvo)</option>\r\n              <option value=\"title_asc\">Naslov A-Z</option>\r\n              <option value=\"title_desc\">Naslov Z-A</option>\r\n              <option value=\"type_asc\">Tip A-Z</option>\r\n              <option value=\"type_desc\">Tip Z-A</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"n-right\">\r\n          <button className=\"btn primary\" onClick={handleMarkAll}>\r\n            Označi sve kao pročitano\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"card n-card\">\r\n        <div className=\"n-table head\">\r\n          <div>#</div>\r\n          <div>Naslov</div>\r\n          <div>Tip</div>\r\n          <div>Poruka</div>\r\n          <div>Poslato</div>\r\n          <div />\r\n        </div>\r\n\r\n        {loading ? (\r\n          <div className=\"n-skeleton\">Učitavanje…</div>\r\n        ) : (\r\n          visible.map((n, idx) => {\r\n            const id = n.notificationId ?? n.id;\r\n            const title = n.notificationTitle || n.title || \"—\";\r\n            const msg = n.message || n.notificationMessage || n.body || \"—\";\r\n            const sent = n.sentAt || n.createdAt || n.date;\r\n            const tId = Number(getTypeId(n));\r\n            const tName = typesMap.get(tId) || \"—\";\r\n\r\n            return (\r\n              <div key={id} className={`n-table row ${n.read ? \"is-read\" : \"\"}`}>\r\n                <div>{idx + 1}</div>\r\n                <div className=\"n-title\">{title}</div>\r\n                <div>\r\n                  <span className=\"type-pill\">{tName}</span>\r\n                </div>\r\n                <div className=\"n-msg\">{msg}</div>\r\n                <div className=\"n-date\">\r\n                  {sent ? new Date(sent).toLocaleString() : \"—\"}\r\n                </div>\r\n                <div className=\"n-actions\">\r\n                  {n.read ? (\r\n                    <span className=\"badge read\">Pročitano</span>\r\n                  ) : (\r\n                    <button className=\"btn ghost sm\" onClick={() => handleMarkRead(id)}>\r\n                      Označi pročitano\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n\r\n        {!loading && visible.length === 0 && (\r\n          <div className=\"n-empty muted\">Nema rezultata za dati filter/pretragu.</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}