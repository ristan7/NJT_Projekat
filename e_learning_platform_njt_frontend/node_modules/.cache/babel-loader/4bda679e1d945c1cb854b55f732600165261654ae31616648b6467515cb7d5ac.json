{"ast":null,"code":"// src/api/api.js\nconst API = \"/api\";\n\n// --- Auth/me preko AuthController-a ---\nexport async function getMe() {\n  const res = await fetch(`${API}/auth/me`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to load current user.\");\n  return res.json();\n}\n\n// unread count: ostaje isti endpoint koji već imaš na backendu\nexport async function getUnreadCount(userId) {\n  if (!userId) return 0;\n  const res = await fetch(`${API}/notifications/unread/count?userId=${userId}`);\n  if (!res.ok) return 0;\n  const n = await res.json();\n  return Number(n || 0);\n}\nexport async function getNotifications({\n  userId,\n  unread = false,\n  limit = 50\n} = {}) {\n  const params = new URLSearchParams();\n  if (userId != null) params.set(\"userId\", userId);\n  if (unread) params.set(\"unread\", \"true\");\n  if (limit != null) params.set(\"limit\", limit);\n  const res = await fetch(`${API}/notifications?${params.toString()}`);\n  if (!res.ok) throw new Error(\"Failed to load notifications.\");\n  return res.json();\n}\nexport async function markNotificationRead(id) {\n  const res = await fetch(`${API}/notifications/${id}/read`, {\n    method: \"POST\"\n  });\n  if (!res.ok) throw new Error(\"Mark read failed.\");\n  return true;\n}\nexport async function markAllNotificationsRead(userId) {\n  const res = await fetch(`${API}/notifications/read-all?userId=${userId}`, {\n    method: \"POST\"\n  });\n  if (!res.ok) throw new Error(\"Mark all read failed.\");\n  return true;\n}\nexport async function getNotificationTypes() {\n  const res = await fetch(`${API}/notification-types`);\n  if (!res.ok) throw new Error(\"Failed to load notification types.\");\n  return res.json();\n}\nexport async function deleteNotification(id) {\n  const res = await fetch(`${API}/notifications/${id}`, {\n    method: \"DELETE\"\n  });\n  if (!res.ok) throw new Error(`Delete notification #${id} failed`);\n  return true;\n}\n\n// NEW: lista korisnika sada je pod /api/auth/users\nexport async function getUsers() {\n  const res = await fetch(`${API}/auth/users`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to load users.\");\n  return res.json();\n}\n\n// demo stub\nexport async function getRecommendedCourses() {\n  return Promise.resolve([{\n    id: 1,\n    title: \"Java for Beginners\",\n    meta: \"8h • 24 lessons\"\n  }, {\n    id: 2,\n    title: \"Spring Boot REST API\",\n    meta: \"6h • 18 lessons\"\n  }, {\n    id: 3,\n    title: \"React Basics\",\n    meta: \"5h • 15 lessons\"\n  }]);\n}","map":{"version":3,"names":["API","getMe","res","fetch","headers","Authorization","localStorage","getItem","ok","Error","json","getUnreadCount","userId","n","Number","getNotifications","unread","limit","params","URLSearchParams","set","toString","markNotificationRead","id","method","markAllNotificationsRead","getNotificationTypes","deleteNotification","getUsers","getRecommendedCourses","Promise","resolve","title","meta"],"sources":["C:/Users/mikir/Documents/NetBeansProjects/NJT_Projekat/e_learning_platform_njt_frontend/src/api/api.js"],"sourcesContent":["// src/api/api.js\r\nconst API = \"/api\";\r\n\r\n// --- Auth/me preko AuthController-a ---\r\nexport async function getMe() {\r\n  const res = await fetch(`${API}/auth/me`, {\r\n    headers: { Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}` }\r\n  });\r\n  if (!res.ok) throw new Error(\"Failed to load current user.\");\r\n  return res.json();\r\n}\r\n\r\n// unread count: ostaje isti endpoint koji već imaš na backendu\r\nexport async function getUnreadCount(userId) {\r\n  if (!userId) return 0;\r\n  const res = await fetch(`${API}/notifications/unread/count?userId=${userId}`);\r\n  if (!res.ok) return 0;\r\n  const n = await res.json();\r\n  return Number(n || 0);\r\n}\r\n\r\nexport async function getNotifications({ userId, unread = false, limit = 50 } = {}) {\r\n  const params = new URLSearchParams();\r\n  if (userId != null) params.set(\"userId\", userId);\r\n  if (unread) params.set(\"unread\", \"true\");\r\n  if (limit != null) params.set(\"limit\", limit);\r\n  const res = await fetch(`${API}/notifications?${params.toString()}`);\r\n  if (!res.ok) throw new Error(\"Failed to load notifications.\");\r\n  return res.json();\r\n}\r\n\r\nexport async function markNotificationRead(id) {\r\n  const res = await fetch(`${API}/notifications/${id}/read`, { method: \"POST\" });\r\n  if (!res.ok) throw new Error(\"Mark read failed.\");\r\n  return true;\r\n}\r\n\r\nexport async function markAllNotificationsRead(userId) {\r\n  const res = await fetch(`${API}/notifications/read-all?userId=${userId}`, { method: \"POST\" });\r\n  if (!res.ok) throw new Error(\"Mark all read failed.\");\r\n  return true;\r\n}\r\n\r\nexport async function getNotificationTypes() {\r\n  const res = await fetch(`${API}/notification-types`);\r\n  if (!res.ok) throw new Error(\"Failed to load notification types.\");\r\n  return res.json();\r\n}\r\n\r\nexport async function deleteNotification(id) {\r\n  const res = await fetch(`${API}/notifications/${id}`, { method: \"DELETE\" });\r\n  if (!res.ok) throw new Error(`Delete notification #${id} failed`);\r\n  return true;\r\n}\r\n\r\n// NEW: lista korisnika sada je pod /api/auth/users\r\nexport async function getUsers() {\r\n  const res = await fetch(`${API}/auth/users`, {\r\n    headers: { Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}` }\r\n  });\r\n  if (!res.ok) throw new Error(\"Failed to load users.\");\r\n  return res.json();\r\n}\r\n\r\n// demo stub\r\nexport async function getRecommendedCourses() {\r\n  return Promise.resolve([\r\n    { id: 1, title: \"Java for Beginners\", meta: \"8h • 24 lessons\" },\r\n    { id: 2, title: \"Spring Boot REST API\", meta: \"6h • 18 lessons\" },\r\n    { id: 3, title: \"React Basics\", meta: \"5h • 15 lessons\" },\r\n  ]);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}