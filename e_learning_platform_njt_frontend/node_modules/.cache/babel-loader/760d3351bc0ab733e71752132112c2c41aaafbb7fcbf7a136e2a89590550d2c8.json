{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikir\\\\Documents\\\\NetBeansProjects\\\\NJT_Projekat\\\\e_learning_platform_njt_frontend\\\\src\\\\pages\\\\Notifications.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Notifications.jsx\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { getMe, getNotifications, markNotificationRead, markAllNotificationsRead, getNotificationTypes, deleteNotification } from \"../api/api\";\nimport { emitUnreadChanged } from \"../api/notificationsBus\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/Notifications.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Notifications() {\n  _s();\n  const [me, setMe] = useState(null);\n  const [items, setItems] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // UI state\n  const [onlyUnread, setOnlyUnread] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [sortKey, setSortKey] = useState(\"date_desc\"); // date_asc | title_asc | title_desc | type_asc | type_desc\n  const [typeFilter, setTypeFilter] = useState(\"all\");\n\n  // pagination\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  // ------------------------------ Load ------------------------------\n  useEffect(() => {\n    (async () => {\n      try {\n        var _u$id;\n        setLoading(true);\n        const u = await getMe();\n        setMe(u);\n        const uid = (_u$id = u === null || u === void 0 ? void 0 : u.id) !== null && _u$id !== void 0 ? _u$id : u === null || u === void 0 ? void 0 : u.userId;\n        const [tps, list] = await Promise.all([getNotificationTypes(), getNotifications({\n          userId: uid,\n          unread: false,\n          limit: 500\n        })]);\n        setTypes(Array.isArray(tps) ? tps : []);\n        setItems(Array.isArray(list) ? list : []);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  // ------------------------------ Helpers ------------------------------\n  const typesMap = useMemo(() => {\n    const m = new Map();\n    for (const t of types || []) {\n      if (!t) continue;\n      const id = Number(t.id);\n      if (Number.isFinite(id)) {\n        m.set(id, t.notificationTypeName || t.name || \"\");\n      }\n    }\n    return m;\n  }, [types]);\n  const getTypeId = n => {\n    var _ref, _ref2, _ref3, _n$notificationTypeId, _n$type, _n$notificationType;\n    return (_ref = (_ref2 = (_ref3 = (_n$notificationTypeId = n === null || n === void 0 ? void 0 : n.notificationTypeId) !== null && _n$notificationTypeId !== void 0 ? _n$notificationTypeId : n === null || n === void 0 ? void 0 : n.typeId) !== null && _ref3 !== void 0 ? _ref3 : n === null || n === void 0 ? void 0 : (_n$type = n.type) === null || _n$type === void 0 ? void 0 : _n$type.id) !== null && _ref2 !== void 0 ? _ref2 : n === null || n === void 0 ? void 0 : (_n$notificationType = n.notificationType) === null || _n$notificationType === void 0 ? void 0 : _n$notificationType.id) !== null && _ref !== void 0 ? _ref : null;\n  };\n\n  // ------------------------------ Visible (filter/sort) ------------------------------\n  const filteredSorted = useMemo(() => {\n    let arr = Array.isArray(items) ? [...items] : [];\n    if (onlyUnread) arr = arr.filter(n => !n.read);\n    if (typeFilter !== \"all\") {\n      const idNum = Number(typeFilter);\n      arr = arr.filter(n => Number(getTypeId(n)) === idNum);\n    }\n    if (query.trim()) {\n      const q = query.trim().toLowerCase();\n      arr = arr.filter(n => {\n        const title = (n.notificationTitle || n.title || \"\").toLowerCase();\n        const msg = (n.message || n.notificationMessage || n.body || \"\").toLowerCase();\n        const tName = (typesMap.get(Number(getTypeId(n))) || \"\").toLowerCase();\n        return title.includes(q) || msg.includes(q) || tName.includes(q);\n      });\n    }\n    arr.sort((a, b) => {\n      switch (sortKey) {\n        case \"title_asc\":\n        case \"title_desc\":\n          {\n            const A = (a.notificationTitle || a.title || \"\").toLowerCase();\n            const B = (b.notificationTitle || b.title || \"\").toLowerCase();\n            const cmp = A.localeCompare(B);\n            return sortKey === \"title_asc\" ? cmp : -cmp;\n          }\n        case \"type_asc\":\n        case \"type_desc\":\n          {\n            const A = (typesMap.get(Number(getTypeId(a))) || \"\").toLowerCase();\n            const B = (typesMap.get(Number(getTypeId(b))) || \"\").toLowerCase();\n            const cmp = A.localeCompare(B);\n            return sortKey === \"type_asc\" ? cmp : -cmp;\n          }\n        case \"date_asc\":\n        case \"date_desc\":\n        default:\n          {\n            const A = new Date(a.sentAt || a.createdAt || a.date || 0).getTime();\n            const B = new Date(b.sentAt || b.createdAt || b.date || 0).getTime();\n            return sortKey === \"date_asc\" ? A - B : B - A;\n          }\n      }\n    });\n    return arr;\n  }, [items, onlyUnread, query, sortKey, typeFilter, typesMap]);\n\n  // slice for current page\n  const paged = useMemo(() => {\n    const start = page * rowsPerPage;\n    const end = start + rowsPerPage;\n    return filteredSorted.slice(start, end);\n  }, [filteredSorted, page, rowsPerPage]);\n\n  // reset to first page on filters/sort change\n  useEffect(() => {\n    setPage(0);\n  }, [onlyUnread, query, sortKey, typeFilter, rowsPerPage]);\n\n  // ------------------------------ Actions ------------------------------\n  async function handleMarkRead(id) {\n    const prev = items;\n    setItems(list => list.map(n => n.notificationId === id || n.id === id ? {\n      ...n,\n      read: true\n    } : n));\n    try {\n      await markNotificationRead(id);\n      emitUnreadChanged();\n    } catch {\n      setItems(prev);\n    }\n  }\n  async function handleMarkAll() {\n    var _me$id;\n    if (!me) return;\n    const uid = (_me$id = me.id) !== null && _me$id !== void 0 ? _me$id : me.userId;\n    const prev = items;\n    setItems(list => list.map(n => ({\n      ...n,\n      read: true\n    })));\n    try {\n      await markAllNotificationsRead(uid);\n      emitUnreadChanged();\n    } catch {\n      setItems(prev);\n    }\n  }\n  async function handleDelete(id) {\n    const prev = items;\n    setItems(list => list.filter(n => {\n      var _n$notificationId;\n      return ((_n$notificationId = n.notificationId) !== null && _n$notificationId !== void 0 ? _n$notificationId : n.id) !== id;\n    }));\n    try {\n      await deleteNotification(id);\n      emitUnreadChanged();\n    } catch {\n      setItems(prev);\n    }\n  }\n\n  // ------------------------------ Render ------------------------------\n  const nameOrUsername = [me === null || me === void 0 ? void 0 : me.firstName, me === null || me === void 0 ? void 0 : me.lastName].filter(Boolean).join(\" \") || (me === null || me === void 0 ? void 0 : me.username) || \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"n-head\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"n-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"who\",\n          children: [nameOrUsername, \" \\u2022 \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"muted\",\n            children: me === null || me === void 0 ? void 0 : me.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"n-filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"n-search\",\n            placeholder: \"Search by title, message or type\\u2026\",\n            value: query,\n            onChange: e => setQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"n-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: onlyUnread,\n              onChange: e => setOnlyUnread(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Only unread\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"n-select\",\n            value: typeFilter,\n            onChange: e => setTypeFilter(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), (types || []).map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: t.id,\n              children: t.notificationTypeName || t.name\n            }, t.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"n-select\",\n            value: sortKey,\n            onChange: e => setSortKey(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"date_desc\",\n              children: \"Date (new first)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"date_asc\",\n              children: \"Date (old first)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"title_asc\",\n              children: \"Title A\\u2013Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"title_desc\",\n              children: \"Title Z\\u2013A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"type_asc\",\n              children: \"Type A\\u2013Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"type_desc\",\n              children: \"Type Z\\u2013A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"n-right\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/notifications/new\",\n          className: \"btn ghost\",\n          children: \"+ New notification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn primary\",\n          onClick: handleMarkAll,\n          children: \"Mark all as read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card n-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"n-table head\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Sent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"n-skeleton\",\n        children: \"Loading\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this) : paged.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"n-empty muted\",\n        children: \"No results for the current filter/search.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this) : paged.map((n, idx) => {\n        var _n$notificationId2;\n        const id = (_n$notificationId2 = n.notificationId) !== null && _n$notificationId2 !== void 0 ? _n$notificationId2 : n.id;\n        const title = n.notificationTitle || n.title || \"—\";\n        const msg = n.message || n.notificationMessage || n.body || \"—\";\n        const sent = n.sentAt || n.createdAt || n.date;\n        const tId = Number(getTypeId(n));\n        const tName = typesMap.get(tId) || \"—\";\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `n-table row ${n.read ? \"is-read\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: page * rowsPerPage + idx + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"n-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"type-pill\",\n              children: tName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"n-msg\",\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"n-date\",\n            children: sent ? new Date(sent).toLocaleString() : \"—\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"n-actions gap\",\n            children: [n.read ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge read\",\n              children: \"Read\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn ghost sm\",\n              onClick: () => handleMarkRead(id),\n              children: \"Mark read\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn danger sm\",\n              onClick: () => handleDelete(id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this);\n      }), !loading && filteredSorted.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"n-pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"n-rows\",\n          children: [\"Rows per page:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"n-select sm\",\n            value: rowsPerPage,\n            onChange: e => setRowsPerPage(Number(e.target.value)),\n            children: [5, 10, 25, 50, 100].map(n => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: n,\n              children: n\n            }, n, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"muted\",\n            children: [\"\\xA0\\xA0\", filteredSorted.length === 0 ? \"0–0 of 0\" : `${page * rowsPerPage + 1}–${Math.min((page + 1) * rowsPerPage, filteredSorted.length)} of ${filteredSorted.length}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"n-pager\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pager-btn\",\n            disabled: page === 0,\n            onClick: () => setPage(p => Math.max(p - 1, 0)),\n            \"aria-label\": \"Prev\",\n            children: \"\\u25C0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pager-btn\",\n            disabled: (page + 1) * rowsPerPage >= filteredSorted.length,\n            onClick: () => setPage(p => (p + 1) * rowsPerPage >= filteredSorted.length ? p : p + 1),\n            \"aria-label\": \"Next\",\n            children: \"\\u25B6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s(Notifications, \"nh5edqBAy5J4znym95aTAmlpyNw=\");\n_c = Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","getMe","getNotifications","markNotificationRead","markAllNotificationsRead","getNotificationTypes","deleteNotification","emitUnreadChanged","Link","jsxDEV","_jsxDEV","Notifications","_s","me","setMe","items","setItems","types","setTypes","loading","setLoading","onlyUnread","setOnlyUnread","query","setQuery","sortKey","setSortKey","typeFilter","setTypeFilter","page","setPage","rowsPerPage","setRowsPerPage","_u$id","u","uid","id","userId","tps","list","Promise","all","unread","limit","Array","isArray","typesMap","m","Map","t","Number","isFinite","set","notificationTypeName","name","getTypeId","n","_ref","_ref2","_ref3","_n$notificationTypeId","_n$type","_n$notificationType","notificationTypeId","typeId","type","notificationType","filteredSorted","arr","filter","read","idNum","trim","q","toLowerCase","title","notificationTitle","msg","message","notificationMessage","body","tName","get","includes","sort","a","b","A","B","cmp","localeCompare","Date","sentAt","createdAt","date","getTime","paged","start","end","slice","handleMarkRead","prev","map","notificationId","handleMarkAll","_me$id","handleDelete","_n$notificationId","nameOrUsername","firstName","lastName","Boolean","join","username","className","children","email","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","checked","to","onClick","length","idx","_n$notificationId2","sent","tId","toLocaleString","Math","min","disabled","p","max","_c","$RefreshReg$"],"sources":["C:/Users/mikir/Documents/NetBeansProjects/NJT_Projekat/e_learning_platform_njt_frontend/src/pages/Notifications.jsx"],"sourcesContent":["// src/pages/Notifications.jsx\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n  getMe,\r\n  getNotifications,\r\n  markNotificationRead,\r\n  markAllNotificationsRead,\r\n  getNotificationTypes,\r\n  deleteNotification,\r\n} from \"../api/api\";\r\nimport { emitUnreadChanged } from \"../api/notificationsBus\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Notifications.css\";\r\n\r\nexport default function Notifications() {\r\n  const [me, setMe] = useState(null);\r\n  const [items, setItems] = useState([]);\r\n  const [types, setTypes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // UI state\r\n  const [onlyUnread, setOnlyUnread] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [sortKey, setSortKey] = useState(\"date_desc\"); // date_asc | title_asc | title_desc | type_asc | type_desc\r\n  const [typeFilter, setTypeFilter] = useState(\"all\");\r\n\r\n  // pagination\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  // ------------------------------ Load ------------------------------\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        const u = await getMe();\r\n        setMe(u);\r\n        const uid = u?.id ?? u?.userId;\r\n\r\n        const [tps, list] = await Promise.all([\r\n          getNotificationTypes(),\r\n          getNotifications({ userId: uid, unread: false, limit: 500 }),\r\n        ]);\r\n\r\n        setTypes(Array.isArray(tps) ? tps : []);\r\n        setItems(Array.isArray(list) ? list : []);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  // ------------------------------ Helpers ------------------------------\r\n  const typesMap = useMemo(() => {\r\n    const m = new Map();\r\n    for (const t of types || []) {\r\n      if (!t) continue;\r\n      const id = Number(t.id);\r\n      if (Number.isFinite(id)) {\r\n        m.set(id, t.notificationTypeName || t.name || \"\");\r\n      }\r\n    }\r\n    return m;\r\n  }, [types]);\r\n\r\n  const getTypeId = (n) =>\r\n    n?.notificationTypeId ??\r\n    n?.typeId ??\r\n    n?.type?.id ??\r\n    n?.notificationType?.id ??\r\n    null;\r\n\r\n  // ------------------------------ Visible (filter/sort) ------------------------------\r\n  const filteredSorted = useMemo(() => {\r\n    let arr = Array.isArray(items) ? [...items] : [];\r\n\r\n    if (onlyUnread) arr = arr.filter((n) => !n.read);\r\n\r\n    if (typeFilter !== \"all\") {\r\n      const idNum = Number(typeFilter);\r\n      arr = arr.filter((n) => Number(getTypeId(n)) === idNum);\r\n    }\r\n\r\n    if (query.trim()) {\r\n      const q = query.trim().toLowerCase();\r\n      arr = arr.filter((n) => {\r\n        const title = (n.notificationTitle || n.title || \"\").toLowerCase();\r\n        const msg = (n.message || n.notificationMessage || n.body || \"\").toLowerCase();\r\n        const tName = (typesMap.get(Number(getTypeId(n))) || \"\").toLowerCase();\r\n        return title.includes(q) || msg.includes(q) || tName.includes(q);\r\n      });\r\n    }\r\n\r\n    arr.sort((a, b) => {\r\n      switch (sortKey) {\r\n        case \"title_asc\":\r\n        case \"title_desc\": {\r\n          const A = (a.notificationTitle || a.title || \"\").toLowerCase();\r\n          const B = (b.notificationTitle || b.title || \"\").toLowerCase();\r\n          const cmp = A.localeCompare(B);\r\n          return sortKey === \"title_asc\" ? cmp : -cmp;\r\n        }\r\n        case \"type_asc\":\r\n        case \"type_desc\": {\r\n          const A = (typesMap.get(Number(getTypeId(a))) || \"\").toLowerCase();\r\n          const B = (typesMap.get(Number(getTypeId(b))) || \"\").toLowerCase();\r\n          const cmp = A.localeCompare(B);\r\n          return sortKey === \"type_asc\" ? cmp : -cmp;\r\n        }\r\n        case \"date_asc\":\r\n        case \"date_desc\":\r\n        default: {\r\n          const A = new Date(a.sentAt || a.createdAt || a.date || 0).getTime();\r\n          const B = new Date(b.sentAt || b.createdAt || b.date || 0).getTime();\r\n          return sortKey === \"date_asc\" ? A - B : B - A;\r\n        }\r\n      }\r\n    });\r\n\r\n    return arr;\r\n  }, [items, onlyUnread, query, sortKey, typeFilter, typesMap]);\r\n\r\n  // slice for current page\r\n  const paged = useMemo(() => {\r\n    const start = page * rowsPerPage;\r\n    const end = start + rowsPerPage;\r\n    return filteredSorted.slice(start, end);\r\n  }, [filteredSorted, page, rowsPerPage]);\r\n\r\n  // reset to first page on filters/sort change\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [onlyUnread, query, sortKey, typeFilter, rowsPerPage]);\r\n\r\n  // ------------------------------ Actions ------------------------------\r\n  async function handleMarkRead(id) {\r\n    const prev = items;\r\n    setItems((list) =>\r\n      list.map((n) => (n.notificationId === id || n.id === id ? { ...n, read: true } : n))\r\n    );\r\n    try {\r\n      await markNotificationRead(id);\r\n      emitUnreadChanged();\r\n    } catch {\r\n      setItems(prev);\r\n    }\r\n  }\r\n\r\n  async function handleMarkAll() {\r\n    if (!me) return;\r\n    const uid = me.id ?? me.userId;\r\n    const prev = items;\r\n    setItems((list) => list.map((n) => ({ ...n, read: true })));\r\n    try {\r\n      await markAllNotificationsRead(uid);\r\n      emitUnreadChanged();\r\n    } catch {\r\n      setItems(prev);\r\n    }\r\n  }\r\n\r\n  async function handleDelete(id) {\r\n    const prev = items;\r\n    setItems((list) => list.filter((n) => (n.notificationId ?? n.id) !== id));\r\n    try {\r\n      await deleteNotification(id);\r\n      emitUnreadChanged();\r\n    } catch {\r\n      setItems(prev);\r\n    }\r\n  }\r\n\r\n  // ------------------------------ Render ------------------------------\r\n  const nameOrUsername =\r\n    [me?.firstName, me?.lastName].filter(Boolean).join(\" \") || me?.username || \"\";\r\n\r\n  return (\r\n    <div className=\"page-wrap\">\r\n      <header className=\"n-head\">\r\n        <div className=\"n-left\">\r\n          <div className=\"who\">\r\n            {nameOrUsername} • <span className=\"muted\">{me?.email}</span>\r\n          </div>\r\n\r\n          <div className=\"n-filters\">\r\n            <input\r\n              className=\"n-search\"\r\n              placeholder=\"Search by title, message or type…\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n            />\r\n\r\n            <label className=\"n-check\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={onlyUnread}\r\n                onChange={(e) => setOnlyUnread(e.target.checked)}\r\n              />\r\n              <span>Only unread</span>\r\n            </label>\r\n\r\n            <select\r\n              className=\"n-select\"\r\n              value={typeFilter}\r\n              onChange={(e) => setTypeFilter(e.target.value)}\r\n            >\r\n              <option value=\"all\">All types</option>\r\n              {(types || []).map((t) => (\r\n                <option key={t.id} value={t.id}>\r\n                  {t.notificationTypeName || t.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <select\r\n              className=\"n-select\"\r\n              value={sortKey}\r\n              onChange={(e) => setSortKey(e.target.value)}\r\n            >\r\n              <option value=\"date_desc\">Date (new first)</option>\r\n              <option value=\"date_asc\">Date (old first)</option>\r\n              <option value=\"title_asc\">Title A–Z</option>\r\n              <option value=\"title_desc\">Title Z–A</option>\r\n              <option value=\"type_asc\">Type A–Z</option>\r\n              <option value=\"type_desc\">Type Z–A</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"n-right\">\r\n          <Link to=\"/notifications/new\" className=\"btn ghost\">\r\n            + New notification\r\n          </Link>\r\n          <button className=\"btn primary\" onClick={handleMarkAll}>\r\n            Mark all as read\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"card n-card\">\r\n        {/* HEADER ROW */}\r\n        <div className=\"n-table head\">\r\n          <div>#</div>\r\n          <div>Title</div>\r\n          <div>Type</div>\r\n          <div>Message</div>\r\n          <div>Sent</div>\r\n          <div>Actions</div>\r\n        </div>\r\n\r\n        {/* BODY */}\r\n        {loading ? (\r\n          <div className=\"n-skeleton\">Loading…</div>\r\n        ) : paged.length === 0 ? (\r\n          <div className=\"n-empty muted\">No results for the current filter/search.</div>\r\n        ) : (\r\n          paged.map((n, idx) => {\r\n            const id = n.notificationId ?? n.id;\r\n            const title = n.notificationTitle || n.title || \"—\";\r\n            const msg = n.message || n.notificationMessage || n.body || \"—\";\r\n            const sent = n.sentAt || n.createdAt || n.date;\r\n            const tId = Number(getTypeId(n));\r\n            const tName = typesMap.get(tId) || \"—\";\r\n\r\n            return (\r\n              <div key={id} className={`n-table row ${n.read ? \"is-read\" : \"\"}`}>\r\n                <div>{page * rowsPerPage + idx + 1}</div>\r\n                <div className=\"n-title\">{title}</div>\r\n                <div>\r\n                  <span className=\"type-pill\">{tName}</span>\r\n                </div>\r\n                <div className=\"n-msg\">{msg}</div>\r\n                <div className=\"n-date\">\r\n                  {sent ? new Date(sent).toLocaleString() : \"—\"}\r\n                </div>\r\n                <div className=\"n-actions gap\">\r\n                  {n.read ? (\r\n                    <span className=\"badge read\">Read</span>\r\n                  ) : (\r\n                    <button className=\"btn ghost sm\" onClick={() => handleMarkRead(id)}>\r\n                      Mark read\r\n                    </button>\r\n                  )}\r\n                  <button className=\"btn danger sm\" onClick={() => handleDelete(id)}>\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n\r\n        {/* PAGINATION */}\r\n        {!loading && filteredSorted.length > 0 && (\r\n          <div className=\"n-pagination\">\r\n            <div className=\"n-rows\">\r\n              Rows per page:&nbsp;\r\n              <select\r\n                className=\"n-select sm\"\r\n                value={rowsPerPage}\r\n                onChange={(e) => setRowsPerPage(Number(e.target.value))}\r\n              >\r\n                {[5, 10, 25, 50, 100].map((n) => (\r\n                  <option key={n} value={n}>\r\n                    {n}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <span className=\"muted\">\r\n                &nbsp;&nbsp;\r\n                {filteredSorted.length === 0\r\n                  ? \"0–0 of 0\"\r\n                  : `${page * rowsPerPage + 1}–${Math.min(\r\n                    (page + 1) * rowsPerPage,\r\n                    filteredSorted.length\r\n                  )} of ${filteredSorted.length}`}\r\n              </span>\r\n            </div>\r\n            <div className=\"n-pager\">\r\n              <button\r\n                className=\"pager-btn\"\r\n                disabled={page === 0}\r\n                onClick={() => setPage((p) => Math.max(p - 1, 0))}\r\n                aria-label=\"Prev\"\r\n              >\r\n                ◀\r\n              </button>\r\n              <button\r\n                className=\"pager-btn\"\r\n                disabled={(page + 1) * rowsPerPage >= filteredSorted.length}\r\n                onClick={() =>\r\n                  setPage((p) =>\r\n                    (p + 1) * rowsPerPage >= filteredSorted.length ? p : p + 1\r\n                  )\r\n                }\r\n                aria-label=\"Next\"\r\n              >\r\n                ▶\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}