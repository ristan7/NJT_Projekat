{"ast":null,"code":"// src/api/api.js\nconst API = \"/api\";\nexport async function getMe({\n  userId\n} = {}) {\n  const url = userId ? `${API}/users/me?id=${userId}` : `${API}/users/me`;\n  const res = await fetch(url);\n  if (!res.ok) throw new Error(\"Ne mogu da učitam korisnika.\");\n  return res.json();\n}\nexport async function getNotifications({\n  userId,\n  unread,\n  limit,\n  sort,\n  dir,\n  q,\n  onlyTypes,\n  includeTypes\n} = {}) {\n  const p = new URLSearchParams();\n  if (userId != null) p.set(\"userId\", userId);\n  if (unread != null) p.set(\"unread\", unread ? \"true\" : \"false\");\n  if (limit != null) p.set(\"limit\", String(limit));\n  if (sort) p.set(\"sort\", sort);\n  if (dir) p.set(\"dir\", dir);\n  if (q) p.set(\"q\", q);\n  if (onlyTypes !== null && onlyTypes !== void 0 && onlyTypes.length) p.set(\"onlyTypes\", onlyTypes.join(\",\"));\n  if (includeTypes !== null && includeTypes !== void 0 && includeTypes.length) p.set(\"includeTypes\", includeTypes.join(\",\"));\n  const url = `${API}/notifications?${p.toString()}`;\n  const res = await fetch(url);\n  if (!res.ok) throw new Error(`Greška pri učitavanju: ${res.status}`);\n  return res.json();\n}\nexport async function getRecommendedCourses() {\n  return Promise.resolve([{\n    id: 1,\n    title: \"Java za početnike\",\n    meta: \"8h • 24 lekcije\"\n  }, {\n    id: 2,\n    title: \"Spring Boot REST API\",\n    meta: \"6h • 18 lekcija\"\n  }, {\n    id: 3,\n    title: \"React osnove\",\n    meta: \"5h • 15 lekcija\"\n  }]);\n}","map":{"version":3,"names":["API","getMe","userId","url","res","fetch","ok","Error","json","getNotifications","unread","limit","sort","dir","q","onlyTypes","includeTypes","p","URLSearchParams","set","String","length","join","toString","status","getRecommendedCourses","Promise","resolve","id","title","meta"],"sources":["C:/Users/mikir/Documents/NetBeansProjects/NJT_Projekat/e_learning_platform_njt_frontend/src/api/api.js"],"sourcesContent":["// src/api/api.js\r\nconst API = \"/api\";\r\n\r\nexport async function getMe({ userId } = {}) {\r\n  const url = userId ? `${API}/users/me?id=${userId}` : `${API}/users/me`;\r\n  const res = await fetch(url);\r\n  if (!res.ok) throw new Error(\"Ne mogu da učitam korisnika.\");\r\n  return res.json();\r\n}\r\n\r\nexport async function getNotifications({\r\n  userId,\r\n  unread,\r\n  limit,\r\n  sort,\r\n  dir,\r\n  q,\r\n  onlyTypes,\r\n  includeTypes,\r\n} = {}) {\r\n  const p = new URLSearchParams();\r\n  if (userId != null) p.set(\"userId\", userId);\r\n  if (unread != null) p.set(\"unread\", unread ? \"true\" : \"false\");\r\n  if (limit != null) p.set(\"limit\", String(limit));\r\n  if (sort) p.set(\"sort\", sort);\r\n  if (dir) p.set(\"dir\", dir);\r\n  if (q) p.set(\"q\", q);\r\n  if (onlyTypes?.length) p.set(\"onlyTypes\", onlyTypes.join(\",\"));\r\n  if (includeTypes?.length) p.set(\"includeTypes\", includeTypes.join(\",\"));\r\n\r\n  const url = `${API}/notifications?${p.toString()}`;\r\n  const res = await fetch(url);\r\n  if (!res.ok) throw new Error(`Greška pri učitavanju: ${res.status}`);\r\n  return res.json();\r\n}\r\n\r\nexport async function getRecommendedCourses() {\r\n  return Promise.resolve([\r\n    { id: 1, title: \"Java za početnike\", meta: \"8h • 24 lekcije\" },\r\n    { id: 2, title: \"Spring Boot REST API\", meta: \"6h • 18 lekcija\" },\r\n    { id: 3, title: \"React osnove\", meta: \"5h • 15 lekcija\" },\r\n  ]);\r\n}\r\n"],"mappings":"AAAA;AACA,MAAMA,GAAG,GAAG,MAAM;AAElB,OAAO,eAAeC,KAAKA,CAAC;EAAEC;AAAO,CAAC,GAAG,CAAC,CAAC,EAAE;EAC3C,MAAMC,GAAG,GAAGD,MAAM,GAAG,GAAGF,GAAG,gBAAgBE,MAAM,EAAE,GAAG,GAAGF,GAAG,WAAW;EACvE,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EAC5B,IAAI,CAACC,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeC,gBAAgBA,CAAC;EACrCP,MAAM;EACNQ,MAAM;EACNC,KAAK;EACLC,IAAI;EACJC,GAAG;EACHC,CAAC;EACDC,SAAS;EACTC;AACF,CAAC,GAAG,CAAC,CAAC,EAAE;EACN,MAAMC,CAAC,GAAG,IAAIC,eAAe,CAAC,CAAC;EAC/B,IAAIhB,MAAM,IAAI,IAAI,EAAEe,CAAC,CAACE,GAAG,CAAC,QAAQ,EAAEjB,MAAM,CAAC;EAC3C,IAAIQ,MAAM,IAAI,IAAI,EAAEO,CAAC,CAACE,GAAG,CAAC,QAAQ,EAAET,MAAM,GAAG,MAAM,GAAG,OAAO,CAAC;EAC9D,IAAIC,KAAK,IAAI,IAAI,EAAEM,CAAC,CAACE,GAAG,CAAC,OAAO,EAAEC,MAAM,CAACT,KAAK,CAAC,CAAC;EAChD,IAAIC,IAAI,EAAEK,CAAC,CAACE,GAAG,CAAC,MAAM,EAAEP,IAAI,CAAC;EAC7B,IAAIC,GAAG,EAAEI,CAAC,CAACE,GAAG,CAAC,KAAK,EAAEN,GAAG,CAAC;EAC1B,IAAIC,CAAC,EAAEG,CAAC,CAACE,GAAG,CAAC,GAAG,EAAEL,CAAC,CAAC;EACpB,IAAIC,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEM,MAAM,EAAEJ,CAAC,CAACE,GAAG,CAAC,WAAW,EAAEJ,SAAS,CAACO,IAAI,CAAC,GAAG,CAAC,CAAC;EAC9D,IAAIN,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAEK,MAAM,EAAEJ,CAAC,CAACE,GAAG,CAAC,cAAc,EAAEH,YAAY,CAACM,IAAI,CAAC,GAAG,CAAC,CAAC;EAEvE,MAAMnB,GAAG,GAAG,GAAGH,GAAG,kBAAkBiB,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAE;EAClD,MAAMnB,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EAC5B,IAAI,CAACC,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0BH,GAAG,CAACoB,MAAM,EAAE,CAAC;EACpE,OAAOpB,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeiB,qBAAqBA,CAAA,EAAG;EAC5C,OAAOC,OAAO,CAACC,OAAO,CAAC,CACrB;IAAEC,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,mBAAmB;IAAEC,IAAI,EAAE;EAAkB,CAAC,EAC9D;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,sBAAsB;IAAEC,IAAI,EAAE;EAAkB,CAAC,EACjE;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,cAAc;IAAEC,IAAI,EAAE;EAAkB,CAAC,CAC1D,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}