{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikir\\\\Documents\\\\NetBeansProjects\\\\NJT_Projekat\\\\e_learning_platform_njt_frontend\\\\src\\\\pages\\\\Notifications.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { getMe, getNotifications, markNotificationRead, markAllNotificationsRead, getNotificationTypes, deleteNotification // ← ako si ga ranije dodao; u suprotnom koristi fetch u ovoj komponenti\n} from \"../api/api\";\nimport { emitUnreadChanged } from \"../api/notificationsBus\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/Notifications.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FAKE_USER_ID = 2; // menjaj ovde za test\n\nexport default function Notifications() {\n  _s();\n  const [me, setMe] = useState(null);\n  const [items, setItems] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // UI stanje\n  const [onlyUnread, setOnlyUnread] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [sortKey, setSortKey] = useState(\"date_desc\"); // date_asc | title_asc | title_desc | type_asc | type_desc\n  const [typeFilter, setTypeFilter] = useState(\"all\");\n\n  // paginacija\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  // -------------------------------- Load --------------------------------\n  useEffect(() => {\n    (async () => {\n      try {\n        setLoading(true);\n        const u = await getMe({\n          userId: FAKE_USER_ID\n        });\n        setMe(u);\n        const [tps, list] = await Promise.all([getNotificationTypes(), getNotifications({\n          userId: u.userId,\n          unread: false,\n          limit: 500\n        })]);\n        setTypes(Array.isArray(tps) ? tps : []);\n        setItems(Array.isArray(list) ? list : []);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  // -------------------------------- Helpers --------------------------------\n  const typesMap = useMemo(() => {\n    const m = new Map();\n    for (const t of types || []) {\n      if (!t) continue;\n      const id = Number(t.id);\n      if (Number.isFinite(id)) {\n        m.set(id, t.notificationTypeName || t.name || \"\");\n      }\n    }\n    return m;\n  }, [types]);\n  const getTypeId = n => {\n    var _ref, _ref2, _ref3, _n$notificationTypeId, _n$type, _n$notificationType;\n    return (_ref = (_ref2 = (_ref3 = (_n$notificationTypeId = n === null || n === void 0 ? void 0 : n.notificationTypeId) !== null && _n$notificationTypeId !== void 0 ? _n$notificationTypeId : n === null || n === void 0 ? void 0 : n.typeId) !== null && _ref3 !== void 0 ? _ref3 : n === null || n === void 0 ? void 0 : (_n$type = n.type) === null || _n$type === void 0 ? void 0 : _n$type.id) !== null && _ref2 !== void 0 ? _ref2 : n === null || n === void 0 ? void 0 : (_n$notificationType = n.notificationType) === null || _n$notificationType === void 0 ? void 0 : _n$notificationType.id) !== null && _ref !== void 0 ? _ref : null;\n  };\n\n  // -------------------------------- Visible (filter/sort) --------------------------------\n  const filteredSorted = useMemo(() => {\n    let arr = Array.isArray(items) ? [...items] : [];\n    if (onlyUnread) arr = arr.filter(n => !n.read);\n    if (typeFilter !== \"all\") {\n      const idNum = Number(typeFilter);\n      arr = arr.filter(n => Number(getTypeId(n)) === idNum);\n    }\n    if (query.trim()) {\n      const q = query.trim().toLowerCase();\n      arr = arr.filter(n => {\n        const title = (n.notificationTitle || n.title || \"\").toLowerCase();\n        const msg = (n.message || n.notificationMessage || n.body || \"\").toLowerCase();\n        const tName = (typesMap.get(Number(getTypeId(n))) || \"\").toLowerCase();\n        return title.includes(q) || msg.includes(q) || tName.includes(q);\n      });\n    }\n    arr.sort((a, b) => {\n      switch (sortKey) {\n        case \"title_asc\":\n        case \"title_desc\":\n          {\n            const A = (a.notificationTitle || a.title || \"\").toLowerCase();\n            const B = (b.notificationTitle || b.title || \"\").toLowerCase();\n            const cmp = A.localeCompare(B);\n            return sortKey === \"title_asc\" ? cmp : -cmp;\n          }\n        case \"type_asc\":\n        case \"type_desc\":\n          {\n            const A = (typesMap.get(Number(getTypeId(a))) || \"\").toLowerCase();\n            const B = (typesMap.get(Number(getTypeId(b))) || \"\").toLowerCase();\n            const cmp = A.localeCompare(B);\n            return sortKey === \"type_asc\" ? cmp : -cmp;\n          }\n        case \"date_asc\":\n        case \"date_desc\":\n        default:\n          {\n            const A = new Date(a.sentAt || a.createdAt || a.date || 0).getTime();\n            const B = new Date(b.sentAt || b.createdAt || b.date || 0).getTime();\n            return sortKey === \"date_asc\" ? A - B : B - A;\n          }\n      }\n    });\n    return arr;\n  }, [items, onlyUnread, query, sortKey, typeFilter, typesMap]);\n\n  // page slice\n  const paged = useMemo(() => {\n    const start = page * rowsPerPage;\n    const end = start + rowsPerPage;\n    return filteredSorted.slice(start, end);\n  }, [filteredSorted, page, rowsPerPage]);\n\n  // kad promeniš filtere/pretragu/sort — resetuj na prvu stranu\n  useEffect(() => {\n    setPage(0);\n  }, [onlyUnread, query, sortKey, typeFilter, rowsPerPage]);\n\n  // -------------------------------- Actions --------------------------------\n  async function handleMarkRead(id) {\n    const prev = items;\n    setItems(list => list.map(n => n.notificationId === id || n.id === id ? {\n      ...n,\n      read: true\n    } : n));\n    try {\n      await markNotificationRead(id);\n      emitUnreadChanged();\n    } catch {\n      setItems(prev);\n    }\n  }\n  async function handleMarkAll() {\n    if (!(me !== null && me !== void 0 && me.userId)) return;\n    const prev = items;\n    setItems(list => list.map(n => ({\n      ...n,\n      read: true\n    })));\n    try {\n      await markAllNotificationsRead(me.userId);\n      emitUnreadChanged();\n    } catch {\n      setItems(prev);\n    }\n  }\n  async function handleDelete(id) {\n    const prev = items;\n    setItems(list => list.filter(n => {\n      var _n$notificationId;\n      return ((_n$notificationId = n.notificationId) !== null && _n$notificationId !== void 0 ? _n$notificationId : n.id) !== id;\n    }));\n    try {\n      if (typeof deleteNotification === \"function\") {\n        await deleteNotification(id);\n      } else {\n        // fallback direktnim pozivom\n        await fetch(`/api/notifications/${id}`, {\n          method: \"DELETE\"\n        });\n      }\n      emitUnreadChanged();\n    } catch (e) {\n      console.error(e);\n      setItems(prev);\n    }\n  }\n\n  // -------------------------------- Render --------------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"n-head\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"n-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"who\",\n          children: [me === null || me === void 0 ? void 0 : me.firstName, \" \", me === null || me === void 0 ? void 0 : me.lastName, \" \\u2022 \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"muted\",\n            children: me === null || me === void 0 ? void 0 : me.userEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"n-filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"n-search\",\n            placeholder: \"Pretraga po naslovu, poruci ili tipu\\u2026\",\n            value: query,\n            onChange: e => setQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"n-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: onlyUnread,\n              onChange: e => setOnlyUnread(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Samo nepro\\u010Ditane\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"n-select\",\n            value: typeFilter,\n            onChange: e => setTypeFilter(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"Svi tipovi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), (types || []).map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: t.id,\n              children: t.notificationTypeName || t.name\n            }, t.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"n-select\",\n            value: sortKey,\n            onChange: e => setSortKey(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"date_desc\",\n              children: \"Datum (novije prvo)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"date_asc\",\n              children: \"Datum (starije prvo)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"title_asc\",\n              children: \"Naslov A\\u2013Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"title_desc\",\n              children: \"Naslov Z\\u2013A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"type_asc\",\n              children: \"Tip A\\u2013Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"type_desc\",\n              children: \"Tip Z\\u2013A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"n-right\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/notifications/new\",\n          className: \"btn ghost\",\n          children: \"+ Nova notifikacija\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn primary\",\n          onClick: handleMarkAll,\n          children: \"Ozna\\u010Di sve kao pro\\u010Ditano\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card n-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"n-table head\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Naslov\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Tip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Poruka\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Poslato\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Akcije\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"n-skeleton\",\n        children: \"U\\u010Ditavanje\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this) : paged.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"n-empty muted\",\n        children: \"Nema rezultata za dati filter/pretragu.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this) : paged.map((n, idx) => {\n        var _n$notificationId2;\n        const id = (_n$notificationId2 = n.notificationId) !== null && _n$notificationId2 !== void 0 ? _n$notificationId2 : n.id;\n        const title = n.notificationTitle || n.title || \"—\";\n        const msg = n.message || n.notificationMessage || n.body || \"—\";\n        const sent = n.sentAt || n.createdAt || n.date;\n        const tId = Number(getTypeId(n));\n        const tName = typesMap.get(tId) || \"—\";\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `n-table row ${n.read ? \"is-read\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: page * rowsPerPage + idx + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"n-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"type-pill\",\n              children: tName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"n-msg\",\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"n-date\",\n            children: sent ? new Date(sent).toLocaleString() : \"—\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"n-actions gap\",\n            children: [n.read ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge read\",\n              children: \"Pro\\u010Ditano\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn ghost sm\",\n              onClick: () => handleMarkRead(id),\n              children: \"Ozna\\u010Di pro\\u010Ditano\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn danger sm\",\n              onClick: () => handleDelete(id),\n              children: \"Obri\\u0161i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }, this);\n      }), !loading && filteredSorted.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"n-pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"n-rows\",\n          children: [\"Rows per page:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"n-select sm\",\n            value: rowsPerPage,\n            onChange: e => setRowsPerPage(Number(e.target.value)),\n            children: [5, 10, 25, 50, 100].map(n => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: n,\n              children: n\n            }, n, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"muted\",\n            children: [\"\\xA0\\xA0\", filteredSorted.length === 0 ? \"0–0 of 0\" : `${page * rowsPerPage + 1}–${Math.min((page + 1) * rowsPerPage, filteredSorted.length)} of ${filteredSorted.length}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"n-pager\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pager-btn\",\n            disabled: page === 0,\n            onClick: () => setPage(p => Math.max(p - 1, 0)),\n            \"aria-label\": \"Prev\",\n            children: \"\\u25C0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pager-btn\",\n            disabled: (page + 1) * rowsPerPage >= filteredSorted.length,\n            onClick: () => setPage(p => (p + 1) * rowsPerPage >= filteredSorted.length ? p : p + 1),\n            \"aria-label\": \"Next\",\n            children: \"\\u25B6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(Notifications, \"nh5edqBAy5J4znym95aTAmlpyNw=\");\n_c = Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","getMe","getNotifications","markNotificationRead","markAllNotificationsRead","getNotificationTypes","deleteNotification","emitUnreadChanged","Link","jsxDEV","_jsxDEV","FAKE_USER_ID","Notifications","_s","me","setMe","items","setItems","types","setTypes","loading","setLoading","onlyUnread","setOnlyUnread","query","setQuery","sortKey","setSortKey","typeFilter","setTypeFilter","page","setPage","rowsPerPage","setRowsPerPage","u","userId","tps","list","Promise","all","unread","limit","Array","isArray","typesMap","m","Map","t","id","Number","isFinite","set","notificationTypeName","name","getTypeId","n","_ref","_ref2","_ref3","_n$notificationTypeId","_n$type","_n$notificationType","notificationTypeId","typeId","type","notificationType","filteredSorted","arr","filter","read","idNum","trim","q","toLowerCase","title","notificationTitle","msg","message","notificationMessage","body","tName","get","includes","sort","a","b","A","B","cmp","localeCompare","Date","sentAt","createdAt","date","getTime","paged","start","end","slice","handleMarkRead","prev","map","notificationId","handleMarkAll","handleDelete","_n$notificationId","fetch","method","e","console","error","className","children","firstName","lastName","userEmail","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","checked","to","onClick","length","idx","_n$notificationId2","sent","tId","toLocaleString","Math","min","disabled","p","max","_c","$RefreshReg$"],"sources":["C:/Users/mikir/Documents/NetBeansProjects/NJT_Projekat/e_learning_platform_njt_frontend/src/pages/Notifications.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n  getMe,\r\n  getNotifications,\r\n  markNotificationRead,\r\n  markAllNotificationsRead,\r\n  getNotificationTypes,\r\n  deleteNotification, // ← ako si ga ranije dodao; u suprotnom koristi fetch u ovoj komponenti\r\n} from \"../api/api\";\r\nimport { emitUnreadChanged } from \"../api/notificationsBus\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Notifications.css\";\r\n\r\nconst FAKE_USER_ID = 2; // menjaj ovde za test\r\n\r\nexport default function Notifications() {\r\n  const [me, setMe] = useState(null);\r\n  const [items, setItems] = useState([]);\r\n  const [types, setTypes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // UI stanje\r\n  const [onlyUnread, setOnlyUnread] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [sortKey, setSortKey] = useState(\"date_desc\"); // date_asc | title_asc | title_desc | type_asc | type_desc\r\n  const [typeFilter, setTypeFilter] = useState(\"all\");\r\n\r\n  // paginacija\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  // -------------------------------- Load --------------------------------\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        setLoading(true);\r\n        const u = await getMe({ userId: FAKE_USER_ID });\r\n        setMe(u);\r\n\r\n        const [tps, list] = await Promise.all([\r\n          getNotificationTypes(),\r\n          getNotifications({ userId: u.userId, unread: false, limit: 500 }),\r\n        ]);\r\n\r\n        setTypes(Array.isArray(tps) ? tps : []);\r\n        setItems(Array.isArray(list) ? list : []);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  // -------------------------------- Helpers --------------------------------\r\n  const typesMap = useMemo(() => {\r\n    const m = new Map();\r\n    for (const t of types || []) {\r\n      if (!t) continue;\r\n      const id = Number(t.id);\r\n      if (Number.isFinite(id)) {\r\n        m.set(id, t.notificationTypeName || t.name || \"\");\r\n      }\r\n    }\r\n    return m;\r\n  }, [types]);\r\n\r\n  const getTypeId = (n) =>\r\n    n?.notificationTypeId ??\r\n    n?.typeId ??\r\n    n?.type?.id ??\r\n    n?.notificationType?.id ??\r\n    null;\r\n\r\n  // -------------------------------- Visible (filter/sort) --------------------------------\r\n  const filteredSorted = useMemo(() => {\r\n    let arr = Array.isArray(items) ? [...items] : [];\r\n\r\n    if (onlyUnread) arr = arr.filter((n) => !n.read);\r\n\r\n    if (typeFilter !== \"all\") {\r\n      const idNum = Number(typeFilter);\r\n      arr = arr.filter((n) => Number(getTypeId(n)) === idNum);\r\n    }\r\n\r\n    if (query.trim()) {\r\n      const q = query.trim().toLowerCase();\r\n      arr = arr.filter((n) => {\r\n        const title = (n.notificationTitle || n.title || \"\").toLowerCase();\r\n        const msg = (n.message || n.notificationMessage || n.body || \"\").toLowerCase();\r\n        const tName = (typesMap.get(Number(getTypeId(n))) || \"\").toLowerCase();\r\n        return title.includes(q) || msg.includes(q) || tName.includes(q);\r\n      });\r\n    }\r\n\r\n    arr.sort((a, b) => {\r\n      switch (sortKey) {\r\n        case \"title_asc\":\r\n        case \"title_desc\": {\r\n          const A = (a.notificationTitle || a.title || \"\").toLowerCase();\r\n          const B = (b.notificationTitle || b.title || \"\").toLowerCase();\r\n          const cmp = A.localeCompare(B);\r\n          return sortKey === \"title_asc\" ? cmp : -cmp;\r\n        }\r\n        case \"type_asc\":\r\n        case \"type_desc\": {\r\n          const A = (typesMap.get(Number(getTypeId(a))) || \"\").toLowerCase();\r\n          const B = (typesMap.get(Number(getTypeId(b))) || \"\").toLowerCase();\r\n          const cmp = A.localeCompare(B);\r\n          return sortKey === \"type_asc\" ? cmp : -cmp;\r\n        }\r\n        case \"date_asc\":\r\n        case \"date_desc\":\r\n        default: {\r\n          const A = new Date(a.sentAt || a.createdAt || a.date || 0).getTime();\r\n          const B = new Date(b.sentAt || b.createdAt || b.date || 0).getTime();\r\n          return sortKey === \"date_asc\" ? A - B : B - A;\r\n        }\r\n      }\r\n    });\r\n\r\n    return arr;\r\n  }, [items, onlyUnread, query, sortKey, typeFilter, typesMap]);\r\n\r\n  // page slice\r\n  const paged = useMemo(() => {\r\n    const start = page * rowsPerPage;\r\n    const end = start + rowsPerPage;\r\n    return filteredSorted.slice(start, end);\r\n  }, [filteredSorted, page, rowsPerPage]);\r\n\r\n  // kad promeniš filtere/pretragu/sort — resetuj na prvu stranu\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [onlyUnread, query, sortKey, typeFilter, rowsPerPage]);\r\n\r\n  // -------------------------------- Actions --------------------------------\r\n  async function handleMarkRead(id) {\r\n    const prev = items;\r\n    setItems((list) =>\r\n      list.map((n) => (n.notificationId === id || n.id === id ? { ...n, read: true } : n)),\r\n    );\r\n\r\n    try {\r\n      await markNotificationRead(id);\r\n      emitUnreadChanged();\r\n    } catch {\r\n      setItems(prev);\r\n    }\r\n  }\r\n\r\n  async function handleMarkAll() {\r\n    if (!me?.userId) return;\r\n    const prev = items;\r\n    setItems((list) => list.map((n) => ({ ...n, read: true })));\r\n    try {\r\n      await markAllNotificationsRead(me.userId);\r\n      emitUnreadChanged();\r\n    } catch {\r\n      setItems(prev);\r\n    }\r\n  }\r\n\r\n  async function handleDelete(id) {\r\n    const prev = items;\r\n    setItems((list) => list.filter((n) => (n.notificationId ?? n.id) !== id));\r\n    try {\r\n      if (typeof deleteNotification === \"function\") {\r\n        await deleteNotification(id);\r\n      } else {\r\n        // fallback direktnim pozivom\r\n        await fetch(`/api/notifications/${id}`, { method: \"DELETE\" });\r\n      }\r\n      emitUnreadChanged();\r\n    } catch (e) {\r\n      console.error(e);\r\n      setItems(prev);\r\n    }\r\n  }\r\n\r\n  // -------------------------------- Render --------------------------------\r\n  return (\r\n    <div className=\"page-wrap\">\r\n      <header className=\"n-head\">\r\n        <div className=\"n-left\">\r\n          <div className=\"who\">\r\n            {me?.firstName} {me?.lastName} • <span className=\"muted\">{me?.userEmail}</span>\r\n          </div>\r\n\r\n          <div className=\"n-filters\">\r\n            <input\r\n              className=\"n-search\"\r\n              placeholder=\"Pretraga po naslovu, poruci ili tipu…\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n            />\r\n\r\n            <label className=\"n-check\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={onlyUnread}\r\n                onChange={(e) => setOnlyUnread(e.target.checked)}\r\n              />\r\n              <span>Samo nepročitane</span>\r\n            </label>\r\n\r\n            <select\r\n              className=\"n-select\"\r\n              value={typeFilter}\r\n              onChange={(e) => setTypeFilter(e.target.value)}\r\n            >\r\n              <option value=\"all\">Svi tipovi</option>\r\n              {(types || []).map((t) => (\r\n                <option key={t.id} value={t.id}>\r\n                  {t.notificationTypeName || t.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <select\r\n              className=\"n-select\"\r\n              value={sortKey}\r\n              onChange={(e) => setSortKey(e.target.value)}\r\n            >\r\n              <option value=\"date_desc\">Datum (novije prvo)</option>\r\n              <option value=\"date_asc\">Datum (starije prvo)</option>\r\n              <option value=\"title_asc\">Naslov A–Z</option>\r\n              <option value=\"title_desc\">Naslov Z–A</option>\r\n              <option value=\"type_asc\">Tip A–Z</option>\r\n              <option value=\"type_desc\">Tip Z–A</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"n-right\">\r\n          <Link to=\"/notifications/new\" className=\"btn ghost\">\r\n            + Nova notifikacija\r\n          </Link>\r\n          <button className=\"btn primary\" onClick={handleMarkAll}>\r\n            Označi sve kao pročitano\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"card n-card\">\r\n        {/* HEADER ROW */}\r\n        <div className=\"n-table head\">\r\n          <div>#</div>\r\n          <div>Naslov</div>\r\n          <div>Tip</div>\r\n          <div>Poruka</div>\r\n          <div>Poslato</div>\r\n          <div>Akcije</div>\r\n        </div>\r\n\r\n        {/* BODY */}\r\n        {loading ? (\r\n          <div className=\"n-skeleton\">Učitavanje…</div>\r\n        ) : paged.length === 0 ? (\r\n          <div className=\"n-empty muted\">Nema rezultata za dati filter/pretragu.</div>\r\n        ) : (\r\n          paged.map((n, idx) => {\r\n            const id = n.notificationId ?? n.id;\r\n            const title = n.notificationTitle || n.title || \"—\";\r\n            const msg = n.message || n.notificationMessage || n.body || \"—\";\r\n            const sent = n.sentAt || n.createdAt || n.date;\r\n            const tId = Number(getTypeId(n));\r\n            const tName = typesMap.get(tId) || \"—\";\r\n\r\n            return (\r\n              <div key={id} className={`n-table row ${n.read ? \"is-read\" : \"\"}`}>\r\n                <div>{page * rowsPerPage + idx + 1}</div>\r\n                <div className=\"n-title\">{title}</div>\r\n                <div>\r\n                  <span className=\"type-pill\">{tName}</span>\r\n                </div>\r\n                <div className=\"n-msg\">{msg}</div>\r\n                <div className=\"n-date\">\r\n                  {sent ? new Date(sent).toLocaleString() : \"—\"}\r\n                </div>\r\n                <div className=\"n-actions gap\">\r\n                  {n.read ? (\r\n                    <span className=\"badge read\">Pročitano</span>\r\n                  ) : (\r\n                    <button className=\"btn ghost sm\" onClick={() => handleMarkRead(id)}>\r\n                      Označi pročitano\r\n                    </button>\r\n                  )}\r\n                  <button className=\"btn danger sm\" onClick={() => handleDelete(id)}>\r\n                    Obriši\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n\r\n        {/* PAGINATION */}\r\n        {!loading && filteredSorted.length > 0 && (\r\n          <div className=\"n-pagination\">\r\n            <div className=\"n-rows\">\r\n              Rows per page:&nbsp;\r\n              <select\r\n                className=\"n-select sm\"\r\n                value={rowsPerPage}\r\n                onChange={(e) => setRowsPerPage(Number(e.target.value))}\r\n              >\r\n                {[5, 10, 25, 50, 100].map((n) => (\r\n                  <option key={n} value={n}>\r\n                    {n}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <span className=\"muted\">\r\n                &nbsp;&nbsp;\r\n                {filteredSorted.length === 0\r\n                  ? \"0–0 of 0\"\r\n                  : `${page * rowsPerPage + 1}–${Math.min(\r\n                    (page + 1) * rowsPerPage,\r\n                    filteredSorted.length\r\n                  )} of ${filteredSorted.length}`}\r\n              </span>\r\n            </div>\r\n            <div className=\"n-pager\">\r\n              <button\r\n                className=\"pager-btn\"\r\n                disabled={page === 0}\r\n                onClick={() => setPage((p) => Math.max(p - 1, 0))}\r\n                aria-label=\"Prev\"\r\n              >\r\n                ◀\r\n              </button>\r\n              <button\r\n                className=\"pager-btn\"\r\n                disabled={(page + 1) * rowsPerPage >= filteredSorted.length}\r\n                onClick={() =>\r\n                  setPage((p) =>\r\n                    (p + 1) * rowsPerPage >= filteredSorted.length ? p : p + 1\r\n                  )\r\n                }\r\n                aria-label=\"Next\"\r\n              >\r\n                ▶\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}