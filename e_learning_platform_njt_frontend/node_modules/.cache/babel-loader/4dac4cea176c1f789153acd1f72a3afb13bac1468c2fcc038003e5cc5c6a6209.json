{"ast":null,"code":"import { request } from \"./fetcher\";\n\n// Current user, resolved from JWT\nexport function getMe() {\n  return request(\"/users/me\");\n}\n\n// Unread badge for current user\nexport async function getUnreadCount() {\n  try {\n    const n = await request(\"/notifications/unread/count\");\n    return Number(n || 0);\n  } catch {\n    return 0;\n  }\n}\n\n// Notifications (for current user)\nexport function getNotifications({\n  unread = false,\n  limit = 50\n} = {}) {\n  return request(\"/notifications\", {\n    params: {\n      unread: unread ? \"true\" : undefined,\n      limit\n    }\n  });\n}\nexport function markNotificationRead(id) {\n  return request(`/notifications/${id}/read`, {\n    method: \"POST\"\n  });\n}\nexport function markAllNotificationsRead() {\n  return request(`/notifications/read-all`, {\n    method: \"POST\"\n  });\n}\nexport function getNotificationTypes() {\n  return request(\"/notification-types\");\n}\nexport function deleteNotification(id) {\n  return request(`/notifications/${id}`, {\n    method: \"DELETE\"\n  });\n}\n\n// For Add Notification form\nexport function getUsers() {\n  return request(\"/users\");\n}\n\n// Demo data for Home\nexport function getRecommendedCourses() {\n  return Promise.resolve([{\n    id: 1,\n    title: \"Java for Beginners\",\n    meta: \"8h • 24 lessons\"\n  }, {\n    id: 2,\n    title: \"Spring Boot REST API\",\n    meta: \"6h • 18 lessons\"\n  }, {\n    id: 3,\n    title: \"React Essentials\",\n    meta: \"5h • 15 lessons\"\n  }]);\n}","map":{"version":3,"names":["request","getMe","getUnreadCount","n","Number","getNotifications","unread","limit","params","undefined","markNotificationRead","id","method","markAllNotificationsRead","getNotificationTypes","deleteNotification","getUsers","getRecommendedCourses","Promise","resolve","title","meta"],"sources":["C:/Users/mikir/Documents/NetBeansProjects/NJT_Projekat/e_learning_platform_njt_frontend/src/api/api.js"],"sourcesContent":["import { request } from \"./fetcher\";\r\n\r\n// Current user, resolved from JWT\r\nexport function getMe() {\r\n  return request(\"/users/me\");\r\n}\r\n\r\n// Unread badge for current user\r\nexport async function getUnreadCount() {\r\n  try {\r\n    const n = await request(\"/notifications/unread/count\");\r\n    return Number(n || 0);\r\n  } catch {\r\n    return 0;\r\n  }\r\n}\r\n\r\n// Notifications (for current user)\r\nexport function getNotifications({ unread = false, limit = 50 } = {}) {\r\n  return request(\"/notifications\", {\r\n    params: { unread: unread ? \"true\" : undefined, limit },\r\n  });\r\n}\r\n\r\nexport function markNotificationRead(id) {\r\n  return request(`/notifications/${id}/read`, { method: \"POST\" });\r\n}\r\n\r\nexport function markAllNotificationsRead() {\r\n  return request(`/notifications/read-all`, { method: \"POST\" });\r\n}\r\n\r\nexport function getNotificationTypes() {\r\n  return request(\"/notification-types\");\r\n}\r\n\r\nexport function deleteNotification(id) {\r\n  return request(`/notifications/${id}`, { method: \"DELETE\" });\r\n}\r\n\r\n// For Add Notification form\r\nexport function getUsers() {\r\n  return request(\"/users\");\r\n}\r\n\r\n// Demo data for Home\r\nexport function getRecommendedCourses() {\r\n  return Promise.resolve([\r\n    { id: 1, title: \"Java for Beginners\", meta: \"8h • 24 lessons\" },\r\n    { id: 2, title: \"Spring Boot REST API\", meta: \"6h • 18 lessons\" },\r\n    { id: 3, title: \"React Essentials\", meta: \"5h • 15 lessons\" },\r\n  ]);\r\n}\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,WAAW;;AAEnC;AACA,OAAO,SAASC,KAAKA,CAAA,EAAG;EACtB,OAAOD,OAAO,CAAC,WAAW,CAAC;AAC7B;;AAEA;AACA,OAAO,eAAeE,cAAcA,CAAA,EAAG;EACrC,IAAI;IACF,MAAMC,CAAC,GAAG,MAAMH,OAAO,CAAC,6BAA6B,CAAC;IACtD,OAAOI,MAAM,CAACD,CAAC,IAAI,CAAC,CAAC;EACvB,CAAC,CAAC,MAAM;IACN,OAAO,CAAC;EACV;AACF;;AAEA;AACA,OAAO,SAASE,gBAAgBA,CAAC;EAAEC,MAAM,GAAG,KAAK;EAAEC,KAAK,GAAG;AAAG,CAAC,GAAG,CAAC,CAAC,EAAE;EACpE,OAAOP,OAAO,CAAC,gBAAgB,EAAE;IAC/BQ,MAAM,EAAE;MAAEF,MAAM,EAAEA,MAAM,GAAG,MAAM,GAAGG,SAAS;MAAEF;IAAM;EACvD,CAAC,CAAC;AACJ;AAEA,OAAO,SAASG,oBAAoBA,CAACC,EAAE,EAAE;EACvC,OAAOX,OAAO,CAAC,kBAAkBW,EAAE,OAAO,EAAE;IAAEC,MAAM,EAAE;EAAO,CAAC,CAAC;AACjE;AAEA,OAAO,SAASC,wBAAwBA,CAAA,EAAG;EACzC,OAAOb,OAAO,CAAC,yBAAyB,EAAE;IAAEY,MAAM,EAAE;EAAO,CAAC,CAAC;AAC/D;AAEA,OAAO,SAASE,oBAAoBA,CAAA,EAAG;EACrC,OAAOd,OAAO,CAAC,qBAAqB,CAAC;AACvC;AAEA,OAAO,SAASe,kBAAkBA,CAACJ,EAAE,EAAE;EACrC,OAAOX,OAAO,CAAC,kBAAkBW,EAAE,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAS,CAAC,CAAC;AAC9D;;AAEA;AACA,OAAO,SAASI,QAAQA,CAAA,EAAG;EACzB,OAAOhB,OAAO,CAAC,QAAQ,CAAC;AAC1B;;AAEA;AACA,OAAO,SAASiB,qBAAqBA,CAAA,EAAG;EACtC,OAAOC,OAAO,CAACC,OAAO,CAAC,CACrB;IAAER,EAAE,EAAE,CAAC;IAAES,KAAK,EAAE,oBAAoB;IAAEC,IAAI,EAAE;EAAkB,CAAC,EAC/D;IAAEV,EAAE,EAAE,CAAC;IAAES,KAAK,EAAE,sBAAsB;IAAEC,IAAI,EAAE;EAAkB,CAAC,EACjE;IAAEV,EAAE,EAAE,CAAC;IAAES,KAAK,EAAE,kBAAkB;IAAEC,IAAI,EAAE;EAAkB,CAAC,CAC9D,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}