{"ast":null,"code":"// src/api/api.js\nimport http from \"./http\";\nconst API = \"/api\";\n\n// ---------- AUTH / USER ----------\nexport async function getMe() {\n  // BE endpoint: /api/auth/me\n  const {\n    data\n  } = await http.get(`${API}/auth/me`);\n  return data; // { id, username, email, firstName, lastName, role }\n}\n\n// ---------- NOTIFICATIONS ----------\nexport async function getUnreadCount(userId) {\n  if (!userId) return 0;\n  try {\n    const {\n      data\n    } = await http.get(`${API}/notifications/unread/count`, {\n      params: {\n        userId\n      }\n    });\n    return Number(data || 0);\n  } catch {\n    return 0;\n  }\n}\nexport async function getNotifications({\n  userId,\n  unread = false,\n  limit = 50\n} = {}) {\n  const params = {};\n  if (userId != null) params.userId = userId;\n  if (unread) params.unread = true;\n  if (limit != null) params.limit = limit;\n  const {\n    data\n  } = await http.get(`${API}/notifications`, {\n    params\n  });\n  return data;\n}\nexport async function markNotificationRead(id) {\n  await http.post(`${API}/notifications/${id}/read`);\n  return true;\n}\nexport async function markAllNotificationsRead(userId) {\n  await http.post(`${API}/notifications/read-all`, null, {\n    params: {\n      userId\n    }\n  });\n  return true;\n}\nexport async function getNotificationTypes() {\n  const {\n    data\n  } = await http.get(`${API}/notification-types`);\n  return data;\n}\nexport async function deleteNotification(id) {\n  await http.delete(`${API}/notifications/${id}`);\n  return true;\n}\n\n// ---------- USERS (za formu „new notification“) ----------\nexport async function getUsers() {\n  const {\n    data\n  } = await http.get(`${API}/users`);\n  return data;\n}\n\n// ---------- STUB KURSEVA ZA HOME ----------\nexport async function getRecommendedCourses() {\n  return Promise.resolve([{\n    id: 1,\n    title: \"Java for Beginners\",\n    meta: \"8h • 24 lessons\"\n  }, {\n    id: 2,\n    title: \"Spring Boot REST API\",\n    meta: \"6h • 18 lessons\"\n  }, {\n    id: 3,\n    title: \"React Basics\",\n    meta: \"5h • 15 lessons\"\n  }]);\n}","map":{"version":3,"names":["http","API","getMe","data","get","getUnreadCount","userId","params","Number","getNotifications","unread","limit","markNotificationRead","id","post","markAllNotificationsRead","getNotificationTypes","deleteNotification","delete","getUsers","getRecommendedCourses","Promise","resolve","title","meta"],"sources":["C:/Users/mikir/Documents/NetBeansProjects/NJT_Projekat/e_learning_platform_njt_frontend/src/api/api.js"],"sourcesContent":["// src/api/api.js\r\nimport http from \"./http\";\r\n\r\nconst API = \"/api\";\r\n\r\n// ---------- AUTH / USER ----------\r\nexport async function getMe() {\r\n  // BE endpoint: /api/auth/me\r\n  const { data } = await http.get(`${API}/auth/me`);\r\n  return data; // { id, username, email, firstName, lastName, role }\r\n}\r\n\r\n// ---------- NOTIFICATIONS ----------\r\nexport async function getUnreadCount(userId) {\r\n  if (!userId) return 0;\r\n  try {\r\n    const { data } = await http.get(\r\n      `${API}/notifications/unread/count`,\r\n      { params: { userId } }\r\n    );\r\n    return Number(data || 0);\r\n  } catch {\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport async function getNotifications({ userId, unread = false, limit = 50 } = {}) {\r\n  const params = {};\r\n  if (userId != null) params.userId = userId;\r\n  if (unread) params.unread = true;\r\n  if (limit != null) params.limit = limit;\r\n\r\n  const { data } = await http.get(`${API}/notifications`, { params });\r\n  return data;\r\n}\r\n\r\nexport async function markNotificationRead(id) {\r\n  await http.post(`${API}/notifications/${id}/read`);\r\n  return true;\r\n}\r\n\r\nexport async function markAllNotificationsRead(userId) {\r\n  await http.post(`${API}/notifications/read-all`, null, { params: { userId } });\r\n  return true;\r\n}\r\n\r\nexport async function getNotificationTypes() {\r\n  const { data } = await http.get(`${API}/notification-types`);\r\n  return data;\r\n}\r\n\r\nexport async function deleteNotification(id) {\r\n  await http.delete(`${API}/notifications/${id}`);\r\n  return true;\r\n}\r\n\r\n// ---------- USERS (za formu „new notification“) ----------\r\nexport async function getUsers() {\r\n  const { data } = await http.get(`${API}/users`);\r\n  return data;\r\n}\r\n\r\n// ---------- STUB KURSEVA ZA HOME ----------\r\nexport async function getRecommendedCourses() {\r\n  return Promise.resolve([\r\n    { id: 1, title: \"Java for Beginners\", meta: \"8h • 24 lessons\" },\r\n    { id: 2, title: \"Spring Boot REST API\", meta: \"6h • 18 lessons\" },\r\n    { id: 3, title: \"React Basics\", meta: \"5h • 15 lessons\" },\r\n  ]);\r\n}\r\n"],"mappings":"AAAA;AACA,OAAOA,IAAI,MAAM,QAAQ;AAEzB,MAAMC,GAAG,GAAG,MAAM;;AAElB;AACA,OAAO,eAAeC,KAAKA,CAAA,EAAG;EAC5B;EACA,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMH,IAAI,CAACI,GAAG,CAAC,GAAGH,GAAG,UAAU,CAAC;EACjD,OAAOE,IAAI,CAAC,CAAC;AACf;;AAEA;AACA,OAAO,eAAeE,cAAcA,CAACC,MAAM,EAAE;EAC3C,IAAI,CAACA,MAAM,EAAE,OAAO,CAAC;EACrB,IAAI;IACF,MAAM;MAAEH;IAAK,CAAC,GAAG,MAAMH,IAAI,CAACI,GAAG,CAC7B,GAAGH,GAAG,6BAA6B,EACnC;MAAEM,MAAM,EAAE;QAAED;MAAO;IAAE,CACvB,CAAC;IACD,OAAOE,MAAM,CAACL,IAAI,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,MAAM;IACN,OAAO,CAAC;EACV;AACF;AAEA,OAAO,eAAeM,gBAAgBA,CAAC;EAAEH,MAAM;EAAEI,MAAM,GAAG,KAAK;EAAEC,KAAK,GAAG;AAAG,CAAC,GAAG,CAAC,CAAC,EAAE;EAClF,MAAMJ,MAAM,GAAG,CAAC,CAAC;EACjB,IAAID,MAAM,IAAI,IAAI,EAAEC,MAAM,CAACD,MAAM,GAAGA,MAAM;EAC1C,IAAII,MAAM,EAAEH,MAAM,CAACG,MAAM,GAAG,IAAI;EAChC,IAAIC,KAAK,IAAI,IAAI,EAAEJ,MAAM,CAACI,KAAK,GAAGA,KAAK;EAEvC,MAAM;IAAER;EAAK,CAAC,GAAG,MAAMH,IAAI,CAACI,GAAG,CAAC,GAAGH,GAAG,gBAAgB,EAAE;IAAEM;EAAO,CAAC,CAAC;EACnE,OAAOJ,IAAI;AACb;AAEA,OAAO,eAAeS,oBAAoBA,CAACC,EAAE,EAAE;EAC7C,MAAMb,IAAI,CAACc,IAAI,CAAC,GAAGb,GAAG,kBAAkBY,EAAE,OAAO,CAAC;EAClD,OAAO,IAAI;AACb;AAEA,OAAO,eAAeE,wBAAwBA,CAACT,MAAM,EAAE;EACrD,MAAMN,IAAI,CAACc,IAAI,CAAC,GAAGb,GAAG,yBAAyB,EAAE,IAAI,EAAE;IAAEM,MAAM,EAAE;MAAED;IAAO;EAAE,CAAC,CAAC;EAC9E,OAAO,IAAI;AACb;AAEA,OAAO,eAAeU,oBAAoBA,CAAA,EAAG;EAC3C,MAAM;IAAEb;EAAK,CAAC,GAAG,MAAMH,IAAI,CAACI,GAAG,CAAC,GAAGH,GAAG,qBAAqB,CAAC;EAC5D,OAAOE,IAAI;AACb;AAEA,OAAO,eAAec,kBAAkBA,CAACJ,EAAE,EAAE;EAC3C,MAAMb,IAAI,CAACkB,MAAM,CAAC,GAAGjB,GAAG,kBAAkBY,EAAE,EAAE,CAAC;EAC/C,OAAO,IAAI;AACb;;AAEA;AACA,OAAO,eAAeM,QAAQA,CAAA,EAAG;EAC/B,MAAM;IAAEhB;EAAK,CAAC,GAAG,MAAMH,IAAI,CAACI,GAAG,CAAC,GAAGH,GAAG,QAAQ,CAAC;EAC/C,OAAOE,IAAI;AACb;;AAEA;AACA,OAAO,eAAeiB,qBAAqBA,CAAA,EAAG;EAC5C,OAAOC,OAAO,CAACC,OAAO,CAAC,CACrB;IAAET,EAAE,EAAE,CAAC;IAAEU,KAAK,EAAE,oBAAoB;IAAEC,IAAI,EAAE;EAAkB,CAAC,EAC/D;IAAEX,EAAE,EAAE,CAAC;IAAEU,KAAK,EAAE,sBAAsB;IAAEC,IAAI,EAAE;EAAkB,CAAC,EACjE;IAAEX,EAAE,EAAE,CAAC;IAAEU,KAAK,EAAE,cAAc;IAAEC,IAAI,EAAE;EAAkB,CAAC,CAC1D,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}